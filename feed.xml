<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ðŸ’» | Blog</title>
    <description>Hack adventures while segfaulting through life
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 02 Oct 2022 16:49:57 +0100</pubDate>
    <lastBuildDate>Sun, 02 Oct 2022 16:49:57 +0100</lastBuildDate>
    <generator>Jekyll v3.8.6</generator>
    
      <item>
        <title>Avoiding SMTP Injection: A Whitebox primer</title>
        <description>&lt;p&gt;SMTP Injection can often be interesting vulnerability to code review and find. Some work I did regarding this can be found here: &lt;a href=&quot;https://snyk.io/blog/avoiding-smtp-injection/&quot;&gt;https://snyk.io/blog/avoiding-smtp-injection/&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 12 Apr 2022 20:25:52 +0100</pubDate>
        <link>http://localhost:4000/software-security/2022/04/12/avoiding-smtp-injection.html</link>
        <guid isPermaLink="true">http://localhost:4000/software-security/2022/04/12/avoiding-smtp-injection.html</guid>
        
        
        <category>software-security</category>
        
      </item>
    
      <item>
        <title>Improving GraphQL security with static analysis</title>
        <description>&lt;p&gt;GraphQL frameworks can often be interesting to code review, and often most static analysis tools donâ€™t support them. Some work I did regarding this can be found here: &lt;a href=&quot;https://snyk.io/blog/graphql-security-static-analysis-snyk-code/&quot;&gt;https://snyk.io/blog/graphql-security-static-analysis-snyk-code/&lt;/a&gt;&lt;/p&gt;...</description>
        <pubDate>Tue, 12 Apr 2022 20:25:52 +0100</pubDate>
        <link>http://localhost:4000/software-security/2022/04/12/improving-graphql-security-with-static-analysis.html</link>
        <guid isPermaLink="true">http://localhost:4000/software-security/2022/04/12/improving-graphql-security-with-static-analysis.html</guid>
        
        
        <category>software-security</category>
        
      </item>
    
      <item>
        <title>rs-async-zip Zip Path Traversal (Zip Slip)</title>
        <description>&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Majored/rs-async-zip&quot;&gt;rs-async-zip&lt;/a&gt; is a asynchronous ZIP archive reading/writing crate with a heavy focus on streaming support. This package is vulnerable to Zip Traversal (Zip Slip).&lt;/p&gt; &lt;p&gt;Note: This issue...</description>
        <pubDate>Tue, 08 Mar 2022 19:25:52 +0000</pubDate>
        <link>http://localhost:4000/software-security/2022/03/08/rs-async-zipslip.html</link>
        <guid isPermaLink="true">http://localhost:4000/software-security/2022/03/08/rs-async-zipslip.html</guid>
        
        
        <category>software-security</category>
        
      </item>
    
      <item>
        <title>Joern Cheat Sheet</title>
        <description>&lt;h3 id=&quot;joern-notes&quot;&gt;Joern Notes&lt;/h3&gt; &lt;p&gt;Joern is a static analyzer that can be used to create code property graphs and query them fairly easy. This is good alternative to CodeQL since analyzing...</description>
        <pubDate>Wed, 08 Dec 2021 19:25:52 +0000</pubDate>
        <link>http://localhost:4000/software-security/2021/12/08/joern-cheat-sheet.html</link>
        <guid isPermaLink="true">http://localhost:4000/software-security/2021/12/08/joern-cheat-sheet.html</guid>
        
        
        <category>software-security</category>
        
      </item>
    
      <item>
        <title>SuiteCRM - Phar Deserialization to Code Execution</title>
        <description>&lt;p&gt;This is a copy of a blog which i recently published on Snyk: https://snyk.io/blog/suitecrm-phar-deserialization-vulnerability-to-code-execution/&lt;/p&gt; &lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt; &lt;p&gt;uiteCRM is a free and open source Customer Relationship Management application for servers. This...</description>
        <pubDate>Sun, 09 May 2021 20:25:52 +0100</pubDate>
        <link>http://localhost:4000/web-application-security/2021/05/09/suitecrm-phar-deserialization.html</link>
        <guid isPermaLink="true">http://localhost:4000/web-application-security/2021/05/09/suitecrm-phar-deserialization.html</guid>
        
        
        <category>web-application-security</category>
        
      </item>
    
      <item>
        <title>Fuzzing with Go-Fuzz</title>
        <description>&lt;p&gt;Fuzzing can often be a very useful technical for finding bugs. Go-fuzz is a coverage-guided fuzzing solution for testing of Go packages. &lt;a href=&quot;https://github.com/dvyukov/go-fuzz&quot;&gt;go-fuzz&lt;/a&gt;. This blog post will walk you...</description>
        <pubDate>Mon, 03 May 2021 20:25:52 +0100</pubDate>
        <link>http://localhost:4000/software-security/2021/05/03/fuzzing-wit-go-fuzz.html</link>
        <guid isPermaLink="true">http://localhost:4000/software-security/2021/05/03/fuzzing-wit-go-fuzz.html</guid>
        
        
        <category>software-security</category>
        
      </item>
    
      <item>
        <title>ADempiere Unsafe Deserialization to Code Execution</title>
        <description>&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt; &lt;p&gt;Deserializing user-controlled object streams at runtime can allow attackers to execute arbitrary code on the server, abuse application logic, and/or lead to denial of service&lt;/p&gt; &lt;p&gt;Java serialization turns...</description>
        <pubDate>Wed, 14 Apr 2021 20:25:52 +0100</pubDate>
        <link>http://localhost:4000/application-security/2021/04/14/09_adempierie_java_deserialization.html</link>
        <guid isPermaLink="true">http://localhost:4000/application-security/2021/04/14/09_adempierie_java_deserialization.html</guid>
        
        
        <category>application-security</category>
        
      </item>
    
      <item>
        <title>OpenCATS PHP Object Injection to Arbitrary File Write</title>
        <description>&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt; &lt;p&gt;OpenCATS is an application tracking system that is written in PHP. More about OpenCATS can be seen here: https://www.opencats.org/. OpenCATS is vulnerable to PHP Object injection, by leveraging...</description>
        <pubDate>Sat, 16 Jan 2021 19:25:52 +0000</pubDate>
        <link>http://localhost:4000/web-application-security/2021/01/16/09_opencats_php_object_injection.html</link>
        <guid isPermaLink="true">http://localhost:4000/web-application-security/2021/01/16/09_opencats_php_object_injection.html</guid>
        
        
        <category>web-application-security</category>
        
      </item>
    
      <item>
        <title>PHP Object Injection Exploitation Notes</title>
        <description>&lt;p&gt;&lt;strong&gt;Notes Iâ€™ve written and Collected about PHP Deserialization&lt;/strong&gt;&lt;/p&gt; &lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt; &lt;h4 id=&quot;serialize-and-unserialize&quot;&gt;serialize and unserialize&lt;/h4&gt; &lt;p&gt;Serialization functions are commonly used within software to store data to a file, a memory buffer,...</description>
        <pubDate>Fri, 08 Jan 2021 19:25:52 +0000</pubDate>
        <link>http://localhost:4000/web-application-security/2021/01/08/02_php_object_injection_exploitation-notes.html</link>
        <guid isPermaLink="true">http://localhost:4000/web-application-security/2021/01/08/02_php_object_injection_exploitation-notes.html</guid>
        
        
        <category>web-application-security</category>
        
      </item>
    
      <item>
        <title>Code Security Advent Calendar 2020 Answers</title>
        <description>&lt;p&gt;SonarSource is a company focused on code quality and static analysis. This year, SonarSource, along with RIPS Technologies will be tweeting code challenges from real world vulnerabilities on their twitter...</description>
        <pubDate>Mon, 28 Dec 2020 19:25:52 +0000</pubDate>
        <link>http://localhost:4000/web-application-security/2020/12/28/code-security-advent-calendar-answers.html</link>
        <guid isPermaLink="true">http://localhost:4000/web-application-security/2020/12/28/code-security-advent-calendar-answers.html</guid>
        
        
        <category>web-application-security</category>
        
      </item>
    
  </channel>
</rss>
